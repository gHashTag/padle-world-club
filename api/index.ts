/**
 * Vercel Serverless Function Entry Point
 * –ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
 */

const express = require('express');
const app = express();

// Middleware
app.use(express.json());
app.use(express.static('public'));

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
app.get('/', (req: any, res: any) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="ru">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Padel World Club</title>
      <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #2c3e50; text-align: center; }
        .status { background: #e8f5e8; padding: 20px; border-radius: 5px; margin: 20px 0; }
        .endpoints { background: #f8f9fa; padding: 20px; border-radius: 5px; }
        .endpoint { margin: 10px 0; }
        .endpoint a { color: #3498db; text-decoration: none; }
        .endpoint a:hover { text-decoration: underline; }
      </style>
    </head>
    <body>
      <div class="container">
        <h1>üèì Padel World Club API</h1>
        <div class="status">
          <h3>‚úÖ –°—Ç–∞—Ç—É—Å: –†–∞–±–æ—Ç–∞–µ—Ç</h3>
          <p>API —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç –Ω–∞ Vercel</p>
          <p><strong>–†–µ–∂–∏–º:</strong> Demo (–±–µ–∑ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö)</p>
        </div>
        <div class="endpoints">
          <h3>üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã:</h3>
          <div class="endpoint">üè• <a href="/health">Health Check</a> - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è API</div>
          <div class="endpoint">üìä <a href="/api">API Info</a> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API</div>
          <div class="endpoint">üìö <a href="/docs">Swagger Documentation</a> - –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API</div>
        </div>
      </div>
    </body>
    </html>
  `);
});

// Health check
app.get('/health', (req: any, res: any) => {
  res.json({
    status: 'ok',
    timestamp: new Date().toISOString(),
    environment: 'vercel',
    message: 'Padel World Club API is running'
  });
});

// API info
app.get('/api', (req: any, res: any) => {
  res.json({
    name: 'Padel World Club API',
    version: '1.0.0',
    description: 'REST API –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–¥–µ–ª-–∫–ª—É–±–æ–º',
    endpoints: {
      health: '/health',
      api: '/api',
      docs: '/docs'
    },
    status: 'demo mode - database not connected'
  });
});

// Docs endpoint
app.get('/docs', (req: any, res: any) => {
  res.send(`
    <!DOCTYPE html>
    <html lang="ru">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Padel World Club API - Documentation</title>
      <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { max-width: 1000px; margin: 0 auto; background: white; padding: 40px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        h1 { color: #2c3e50; text-align: center; }
        h2 { color: #34495e; border-bottom: 2px solid #3498db; padding-bottom: 10px; }
        .endpoint { background: #f8f9fa; padding: 15px; margin: 10px 0; border-radius: 5px; border-left: 4px solid #3498db; }
        .method { background: #27ae60; color: white; padding: 4px 8px; border-radius: 3px; font-size: 12px; font-weight: bold; }
        .url { font-family: monospace; background: #ecf0f1; padding: 4px 8px; border-radius: 3px; }
        .back { text-align: center; margin-top: 30px; }
        .back a { color: #3498db; text-decoration: none; }
      </style>
    </head>
    <body>
      <div class="container">
        <h1>üìö Padel World Club API Documentation</h1>

        <h2>–î–æ—Å—Ç—É–ø–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã</h2>

        <div class="endpoint">
          <h3><span class="method">GET</span> <span class="url">/</span></h3>
          <p>–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞—Ö</p>
        </div>

        <div class="endpoint">
          <h3><span class="method">GET</span> <span class="url">/health</span></h3>
          <p>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è API. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ —Å–µ—Ä–≤–∏—Å–∞.</p>
        </div>

        <div class="endpoint">
          <h3><span class="method">GET</span> <span class="url">/api</span></h3>
          <p>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± API. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç JSON —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ API.</p>
        </div>

        <div class="endpoint">
          <h3><span class="method">GET</span> <span class="url">/docs</span></h3>
          <p>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API (—ç—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞).</p>
        </div>

        <div class="back">
          <a href="/">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é</a>
        </div>
      </div>
    </body>
    </html>
  `);
});

// Catch all
app.get('*', (req: any, res: any) => {
  res.status(404).json({
    error: 'Not Found',
    message: `Route ${req.path} not found`,
    availableRoutes: ['/', '/health', '/api']
  });
});

module.exports = app;
