#!/bin/bash

# Скрипт для запуска тестирования Instagram Scraper Bot
echo "🧪 Запуск тестирования Instagram Scraper Bot..."
echo "-----------------------------------------------------------"

# Проверяем наличие Bun
if command -v bun &> /dev/null; then
    echo "✅ Bun найден, запускаем тестирование с помощью Bun..."

    echo "📝 Подготовка тестовой среды..."
    echo "-----------------------------------------------------------"

    # Подготавливаем тестовую среду
    bun run scripts/prepare-test-env.ts

    # Проверяем, успешно ли выполнилась подготовка
    if [ $? -ne 0 ]; then
        echo "❌ Ошибка при подготовке тестовой среды. Проверьте логи выше."
        exit 1
    fi

    echo "✅ Тестовая среда подготовлена успешно."
    echo "📝 Генерация данных с граничными случаями..."
    echo "-----------------------------------------------------------"

    # Генерируем данные с граничными случаями
    bun run scripts/generate-edge-cases.ts

    # Проверяем, успешно ли выполнилась генерация
    if [ $? -ne 0 ]; then
        echo "❌ Ошибка при генерации данных с граничными случаями. Проверьте логи выше."
        exit 1
    fi

    echo "✅ Данные с граничными случаями сгенерированы успешно."
    echo "📝 Запуск тестов..."
    echo "-----------------------------------------------------------"

    # Запускаем тесты
    bun test

    # Проверяем, успешно ли выполнились тесты
    if [ $? -ne 0 ]; then
        echo "❌ Некоторые тесты не прошли. Проверьте логи выше."
        exit 1
    fi

    echo "✅ Все тесты пройдены успешно."

elif command -v npx &> /dev/null; then
    echo "⚠️ Bun не найден, но найден NPX. Запускаем тестирование с помощью TSX..."
    echo "⚠️ Примечание: Для полной совместимости рекомендуется установить Bun:"
    echo "⚠️ curl -fsSL https://bun.sh/install | bash"
    echo "-----------------------------------------------------------"

    # Проверяем, установлен ли tsx
    if ! npx tsx --version &> /dev/null; then
        echo "🔄 TSX не установлен. Устанавливаем..."
        npm install -g tsx
    fi

    echo "📝 Подготовка тестовой среды..."
    echo "-----------------------------------------------------------"

    # Подготавливаем тестовую среду с помощью TSX
    npx tsx scripts/prepare-test-env.ts

    # Проверяем, успешно ли выполнилась подготовка
    if [ $? -ne 0 ]; then
        echo "❌ Ошибка при подготовке тестовой среды. Проверьте логи выше."
        exit 1
    fi

    echo "✅ Тестовая среда подготовлена успешно."
    echo "📝 Генерация данных с граничными случаями..."
    echo "-----------------------------------------------------------"

    # Генерируем данные с граничными случаями с помощью TSX
    npx tsx scripts/generate-edge-cases.ts

    # Проверяем, успешно ли выполнилась генерация
    if [ $? -ne 0 ]; then
        echo "❌ Ошибка при генерации данных с граничными случаями. Проверьте логи выше."
        exit 1
    fi

    echo "✅ Данные с граничными случаями сгенерированы успешно."
    echo "📝 Запуск тестов..."
    echo "-----------------------------------------------------------"

    # Запускаем тесты с помощью Vitest
    npx vitest run

    # Проверяем, успешно ли выполнились тесты
    if [ $? -ne 0 ]; then
        echo "❌ Некоторые тесты не прошли. Проверьте логи выше."
        exit 1
    fi

    echo "✅ Все тесты пройдены успешно."

elif command -v docker &> /dev/null; then
    echo "⚠️ Bun и Node.js не найдены, но найден Docker. Запускаем тестирование с помощью Docker..."
    echo "⚠️ Примечание: Для полной совместимости рекомендуется установить Bun:"
    echo "⚠️ curl -fsSL https://bun.sh/install | bash"
    echo "-----------------------------------------------------------"

    # Проверяем наличие образа
    if ! docker images | grep -q "instagram-scraper-bot-test"; then
        echo "🔄 Образ не найден, создаем временный Dockerfile..."
        cat > Dockerfile.test.temp << EOF
FROM oven/bun:latest
WORKDIR /app
COPY . .
RUN bun install
CMD ["bun", "test"]
EOF
        echo "🔄 Собираем Docker-образ..."
        docker build -t instagram-scraper-bot-test -f Dockerfile.test.temp .
        rm Dockerfile.test.temp
    fi

    echo "🔄 Запускаем тестирование в контейнере..."
    docker run --rm -it -v $(pwd):/app instagram-scraper-bot-test

    # Проверяем, успешно ли выполнились тесты
    if [ $? -ne 0 ]; then
        echo "❌ Некоторые тесты не прошли. Проверьте логи выше."
        exit 1
    fi

    echo "✅ Все тесты пройдены успешно."
else
    echo "❌ Ни Bun, ни Node.js, ни Docker не найдены."
    echo "❌ Пожалуйста, установите Bun для запуска тестирования:"
    echo "❌ curl -fsSL https://bun.sh/install | bash"
    exit 1
fi

echo "🎉 Тестирование завершено успешно!"
echo "-----------------------------------------------------------"
echo "📋 Теперь вы можете запустить бота командой './start-bot.sh' и провести ручное тестирование по чек-листу:"
echo "   docs/MVP_TESTING_CHECKLIST.md"
echo "-----------------------------------------------------------"
