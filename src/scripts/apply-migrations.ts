/**
 * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç drizzle-kit API –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å—Ö–µ–º—ã
 */

import { execSync } from 'child_process';
import { readFileSync } from 'fs';

async function applyMigrations() {
  console.log('üîÑ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');

  try {
    // –ß–∏—Ç–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é drizzle
    const configPath = './drizzle.config.ts';
    console.log(`üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é: ${configPath}`);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º
    console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º drizzle-kit push...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º execSync —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ—Ç–≤–µ—Ç–æ–º
    const command = 'echo "Yes, I want to execute all statements" | npx drizzle-kit push';
    
    try {
      const output = execSync(command, { 
        encoding: 'utf8',
        stdio: 'pipe',
        timeout: 120000 // 2 –º–∏–Ω—É—Ç—ã —Ç–∞–π–º–∞—É—Ç
      });
      
      console.log('üì§ –í—ã–≤–æ–¥ drizzle-kit:');
      console.log(output);
      
      if (output.includes('All changes were aborted')) {
        console.log('‚ö†Ô∏è  –ò–∑–º–µ–Ω–µ–Ω–∏—è –±—ã–ª–∏ –æ—Ç–º–µ–Ω–µ–Ω—ã. –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è.');
        return;
      }
      
      console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!');
      
    } catch (error) {
      // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ —Å pipe –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥
      console.log('‚ö†Ô∏è  –ü–µ—Ä–≤—ã–π —Å–ø–æ—Å–æ–± –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π...');
      
      try {
        // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –æ—Ç–≤–µ—Ç–æ–º
        const fs = require('fs');
        const tempFile = '/tmp/drizzle_response.txt';
        fs.writeFileSync(tempFile, 'Yes, I want to execute all statements\n');
        
        const altCommand = `npx drizzle-kit push < ${tempFile}`;
        const altOutput = execSync(altCommand, { 
          encoding: 'utf8',
          stdio: 'pipe',
          timeout: 120000
        });
        
        console.log('üì§ –í—ã–≤–æ–¥ drizzle-kit (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±):');
        console.log(altOutput);
        
        // –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        fs.unlinkSync(tempFile);
        
        console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!');
        
      } catch (altError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π:', altError.message);
        console.log('\nüîß –†—É—á–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ:');
        console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npx drizzle-kit push');
        console.log('2. –í—ã–±–µ—Ä–∏—Ç–µ: "Yes, I want to execute all statements"');
        throw altError;
      }
    }

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞:', error.message);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  applyMigrations()
    .then(() => {
      console.log('üéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å: npm run seed:db');
      process.exit(0);
    })
    .catch((error) => {
      console.error('üí• –û—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}
