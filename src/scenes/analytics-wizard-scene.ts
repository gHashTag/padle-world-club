import { Scenes, Markup } from "telegraf";
import type { ScraperBotContext } from "../types";
import { ScraperSceneStep } from "../types";
import { logger } from "../logger";
import { ReelsFilter } from "../schemas";
import { formatDate, formatViews } from "./components/reels-keyboard";

/**
 * –û—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º –∏–∑ —Å—Ü–µ–Ω—ã
 * @param ctx –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param reason –ü—Ä–∏—á–∏–Ω–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è (–¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)
 */
function clearSessionState(ctx: ScraperBotContext, reason: string = "general"): void {
  if (ctx.scene.session) {
    logger.info(`[AnalyticsWizard] Clearing session state before leaving (reason: ${reason})`);
    // –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π —Å–æ—Å—Ç–æ—è–Ω–∏—è
    ctx.scene.session.textReport = undefined;
    ctx.scene.session.csvReport = undefined;
    ctx.scene.session.currentProjectId = undefined;
    ctx.scene.session.step = undefined;
    // –î–ª—è Wizard-—Å—Ü–µ–Ω
    if (ctx.wizard && ctx.wizard.state) {
      ctx.wizard.state = {};
    }
  }
}

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –≤ –¥—Ä—É–≥—É—é —Å—Ü–µ–Ω—É —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 * @param ctx –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegraf
 * @param targetScene –¶–µ–ª–µ–≤–∞—è —Å—Ü–µ–Ω–∞
 * @param reason –ü—Ä–∏—á–∏–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ (–¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è)
 */
async function safeSceneTransition(
  ctx: ScraperBotContext,
  targetScene: string = "project_wizard",
  reason: string = "general"
): Promise<void> {
  try {
    logger.info(`[AnalyticsWizard] Transitioning to ${targetScene} scene (reason: ${reason})`);
    await ctx.scene.enter(targetScene);
  } catch (error) {
    logger.error(`[AnalyticsWizard] Error entering ${targetScene} scene:`, error);
    await ctx.scene.leave();
  }
}

/**
 * Wizard-—Å—Ü–µ–Ω–∞ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ Reels
 */
export const analyticsWizardScene = new Scenes.WizardScene<ScraperBotContext>(
  "analytics_wizard",

  // –®–∞–≥ 1: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  async (ctx) => {
    logger.info(`[AnalyticsWizard] –®–∞–≥ 1: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏`);
    logger.debug(`[AnalyticsWizard] –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ctx.wizard.state:`, ctx.wizard.state);

    if (!ctx.from) {
      logger.error("[AnalyticsWizard] ctx.from is undefined");
      await ctx.reply(
        "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start."
      );
      clearSessionState(ctx, "missing_user");
      return ctx.scene.leave();
    }

    // –ü–æ–ª—É—á–∞–µ–º projectId –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∏–ª–∏ –∏–∑ —Å–µ—Å—Å–∏–∏ –∏–ª–∏ –∏–∑ wizard.state
    let projectId = ctx.scene.session.currentProjectId;
    if (!projectId && ctx.wizard.state.projectId) {
      projectId = ctx.wizard.state.projectId;
    }

    if (!projectId) {
      logger.error("[AnalyticsWizard] Project ID is undefined");
      await ctx.reply(
        "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç –∏–∑ —Å–ø–∏—Å–∫–∞."
      );
      clearSessionState(ctx, "missing_project_id");
      await safeSceneTransition(ctx, "project_wizard", "missing_project_id");
      return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ wizard.state –∏ –≤ —Å–µ—Å—Å–∏–∏
    ctx.wizard.state.projectId = projectId;
    ctx.scene.session.currentProjectId = projectId;

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∞–≥ —Å—Ü–µ–Ω—ã
    ctx.scene.session.step = ScraperSceneStep.REELS_ANALYTICS;

    try {
      await ctx.storage.initialize();

      // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ
      const project = await ctx.storage.getProjectById(projectId);

      if (!project) {
        logger.error(`[AnalyticsWizard] Project with ID ${projectId} not found`);
        await ctx.reply(
          "–ü—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –±—ã–ª —É–¥–∞–ª–µ–Ω."
        );
        clearSessionState(ctx, "project_not_found");
        await safeSceneTransition(ctx, "project_wizard", "project_not_found");
        return;
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø—Ä–æ–µ–∫—Ç–∞ –≤ wizard.state
      ctx.wizard.state.projectName = project.name;

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
      let message = `üìä *–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ "${project.name}"*\n\n`;
      message += "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∞–ª–∏—Ç–∏–∫–∏:";

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      await ctx.reply(message, {
        parse_mode: "Markdown",
        ...Markup.inlineKeyboard([
          [Markup.button.callback("üìà –ü–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç–∞", `analytics_popularity`)],
          [Markup.button.callback("üîç –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ö–µ—à—Ç–µ–≥–æ–≤", `analytics_hashtags`)],
          [Markup.button.callback("üìä –¢—Ä–µ–Ω–¥—ã", `analytics_trends`)],
          [Markup.button.callback("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏", `analytics_recommendations`)],
          [Markup.button.callback("üìÑ –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞", `analytics_export`)],
          [Markup.button.callback("üîô –ö —Å–ø–∏—Å–∫—É Reels", `back_to_reels`)],
          [Markup.button.callback("üîô –ö –ø—Ä–æ–µ–∫—Ç—É", `back_to_project`)]
        ])
      });
    } catch (error) {
      logger.error("[AnalyticsWizard] Error in step 1:", error);
      await ctx.reply(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
      );
      clearSessionState(ctx, "data_loading_error");
      await safeSceneTransition(ctx, "project_wizard", "data_loading_error");
    } finally {
      await ctx.storage.close();
    }

    // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —Ç–µ–∫—É—â–µ–º —à–∞–≥–µ
    return;
  },

  // –®–∞–≥ 2: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  async (ctx) => {
    logger.info(`[AnalyticsWizard] –®–∞–≥ 2: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞`);
    logger.debug(`[AnalyticsWizard] –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ctx.wizard.state:`, ctx.wizard.state);

    const { projectId, projectName } = ctx.wizard.state;

    if (!projectId || !projectName) {
      logger.error("[AnalyticsWizard] Project ID or Project Name is undefined");
      await ctx.reply("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ–µ–∫—Ç. –ù–∞—á–Ω–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞.");
      clearSessionState(ctx, "missing_ids_step_2");
      return ctx.wizard.selectStep(0);
    }

    try {
      await ctx.storage.initialize();

      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ Reels –ø—Ä–æ–µ–∫—Ç–∞
      const reels = await ctx.storage.getReels({ projectId });

      if (reels.length === 0) {
        await ctx.reply(
          `üìä *–ê–Ω–∞–ª–∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ "${projectName}"*\n\n‚ö†Ô∏è –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö Reels –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∞–ø–∏–Ω–≥.`,
          {
            parse_mode: "Markdown",
            ...Markup.inlineKeyboard([
              [Markup.button.callback("‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∞–ø–∏–Ω–≥", `scrape_project`)],
              [Markup.button.callback("üîô –ö –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", `back_to_menu`)],
              [Markup.button.callback("üîô –ö –ø—Ä–æ–µ–∫—Ç—É", `back_to_project`)]
            ])
          }
        );
        return;
      }

      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
      const totalReels = reels.length;
      const totalViews = reels.reduce((sum, reel) => sum + (reel.views || 0), 0);
      const avgViews = totalViews / totalReels;
      const maxViews = Math.max(...reels.map(reel => reel.views || 0));
      const minViews = Math.min(...reels.filter(reel => reel.views !== undefined).map(reel => reel.views || 0));

      // –ù–∞—Ö–æ–¥–∏–º Reel —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
      const mostViewedReel = reels.find(reel => reel.views === maxViews);

      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
      const reelsByDate: { [key: string]: number } = {};
      reels.forEach(reel => {
        const date = new Date(reel.published_at).toLocaleDateString("ru-RU");
        reelsByDate[date] = (reelsByDate[date] || 0) + 1;
      });

      // –ù–∞—Ö–æ–¥–∏–º –¥–∞—Ç—É —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—É–±–ª–∏–∫–∞—Ü–∏–π
      let maxDate = "";
      let maxCount = 0;
      for (const [date, count] of Object.entries(reelsByDate)) {
        if (count > maxCount) {
          maxDate = date;
          maxCount = count;
        }
      }

      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫
      const reelsByHour: { [key: number]: number } = {};
      reels.forEach(reel => {
        const hour = new Date(reel.published_at).getHours();
        reelsByHour[hour] = (reelsByHour[hour] || 0) + 1;
      });

      // –ù–∞—Ö–æ–¥–∏–º —á–∞—Å —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—É–±–ª–∏–∫–∞—Ü–∏–π
      let maxHour = 0;
      let maxHourCount = 0;
      for (const [hour, count] of Object.entries(reelsByHour)) {
        if (count > maxHourCount) {
          maxHour = parseInt(hour);
          maxHourCount = count;
        }
      }

      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
      const reelsWithDuration = reels.filter(reel => reel.duration !== null && reel.duration !== undefined);
      const avgDuration = reelsWithDuration.length > 0
        ? reelsWithDuration.reduce((sum, reel) => sum + (reel.duration || 0), 0) / reelsWithDuration.length
        : 0;

      // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
      let message = `üìä *–ê–Ω–∞–ª–∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ "${projectName}"*\n\n`;

      message += `üìà *–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n`;
      message += `- –í—Å–µ–≥–æ Reels: *${totalReels}*\n`;
      message += `- –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: *${formatViews(totalViews)}*\n`;
      message += `- –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: *${formatViews(Math.round(avgViews))}*\n`;
      message += `- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: *${formatViews(maxViews)}*\n`;
      message += `- –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤: *${formatViews(minViews)}*\n\n`;

      if (mostViewedReel) {
        message += `üîù *–°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π Reel:*\n`;
        message += `- –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: *${formatViews(mostViewedReel.views)}*\n`;
        message += `- –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: *${formatDate(mostViewedReel.published_at)}*\n`;
        message += `- –ê–≤—Ç–æ—Ä: *${mostViewedReel.author_username || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}*\n`;
        message += `- –û–ø–∏—Å–∞–Ω–∏–µ: ${mostViewedReel.caption ? (mostViewedReel.caption.length > 50 ? mostViewedReel.caption.substring(0, 47) + "..." : mostViewedReel.caption) : "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è"}\n\n`;
      }

      message += `üìÖ *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–∞—Ç–∞–º:*\n`;
      message += `- –î–∞—Ç–∞ —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –ø—É–±–ª–∏–∫–∞—Ü–∏–π: *${maxDate}* (${maxCount} Reels)\n\n`;

      message += `üïí *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:*\n`;
      message += `- –°–∞–º–æ–µ –ø–æ–ø—É–ª—è—Ä–Ω–æ–µ –≤—Ä–µ–º—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: *${maxHour}:00* (${maxHourCount} Reels)\n\n`;

      if (avgDuration > 0) {
        message += `‚è±Ô∏è *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:*\n`;
        message += `- –°—Ä–µ–¥–Ω—è—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å Reels: *${Math.round(avgDuration)} —Å–µ–∫.*\n\n`;
      }

      message += `–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º Reel –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –∫ —Å–ø–∏—Å–∫—É Reels.`;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
      await ctx.reply(message, {
        parse_mode: "Markdown",
        ...Markup.inlineKeyboard([
          [Markup.button.callback("üîô –ö –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏", `back_to_menu`)],
          [Markup.button.callback("üîô –ö —Å–ø–∏—Å–∫—É Reels", `back_to_reels`)],
          [Markup.button.callback("üîô –ö –ø—Ä–æ–µ–∫—Ç—É", `back_to_project`)]
        ])
      });
    } catch (error) {
      logger.error("[AnalyticsWizard] Error in step 2:", error);
      await ctx.reply(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
      );
      return ctx.wizard.selectStep(0);
    } finally {
      await ctx.storage.close();
    }

    // –û—Å—Ç–∞–µ–º—Å—è –Ω–∞ —Ç–µ–∫—É—â–µ–º —à–∞–≥–µ
    return;
  }
);

// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –Ω–∞ —É—Ä–æ–≤–Ω–µ —Å—Ü–µ–Ω—ã
analyticsWizardScene.action("back_to_project", async (ctx) => {
  logger.info(`[AnalyticsWizard] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'back_to_project' –≤—ã–∑–≤–∞–Ω`);
  await ctx.answerCbQuery();

  // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –≤ –¥—Ä—É–≥—É—é —Å—Ü–µ–Ω—É
  clearSessionState(ctx, "back_to_project_clicked");
  await safeSceneTransition(ctx, "project_wizard", "back_to_project_clicked");
});

analyticsWizardScene.action("back_to_reels", async (ctx) => {
  logger.info(`[AnalyticsWizard] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'back_to_reels' –≤—ã–∑–≤–∞–Ω`);
  await ctx.answerCbQuery();

  const projectId = ctx.wizard.state.projectId;

  // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –≤ –¥—Ä—É–≥—É—é —Å—Ü–µ–Ω—É
  clearSessionState(ctx, "back_to_reels_clicked");
  ctx.scene.session.currentProjectId = projectId;
  await safeSceneTransition(ctx, "reels_wizard", "back_to_reels_clicked");
});

analyticsWizardScene.action("back_to_menu", async (ctx) => {
  logger.info(`[AnalyticsWizard] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'back_to_menu' –≤—ã–∑–≤–∞–Ω`);
  await ctx.answerCbQuery();

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (—à–∞–≥ 1)
  return ctx.wizard.selectStep(0);
});

analyticsWizardScene.action("analytics_popularity", async (ctx) => {
  logger.info(`[AnalyticsWizard] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'analytics_popularity' –≤—ã–∑–≤–∞–Ω`);
  await ctx.answerCbQuery();

  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —à–∞–≥—É –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  return ctx.wizard.selectStep(1);
});

analyticsWizardScene.action("scrape_project", async (ctx) => {
  logger.info(`[AnalyticsWizard] –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ 'scrape_project' –≤—ã–∑–≤–∞–Ω`);
  await ctx.answerCbQuery();

  const projectId = ctx.wizard.state.projectId;

  // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –≤ –¥—Ä—É–≥—É—é —Å—Ü–µ–Ω—É
  clearSessionState(ctx, "scrape_project_clicked");
  ctx.scene.session.currentProjectId = projectId;
  await safeSceneTransition(ctx, "scraping_wizard", "scrape_project_clicked");
});

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /analytics
export function setupAnalyticsWizard(bot: any) {
  bot.command('analytics', async (ctx: any) => {
    logger.info("[AnalyticsWizard] Command /analytics triggered");
    await ctx.scene.enter('analytics_wizard');
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é
  bot.hears('üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞', async (ctx: any) => {
    logger.info("[AnalyticsWizard] Button 'üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞' clicked");
    await ctx.scene.enter('analytics_wizard');
  });
}

export default analyticsWizardScene;
