import { Markup } from "telegraf";
import { ReelContent } from "../../schemas";

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–ø–∏—Å–∫–∞ Reels
 * @param reels –ú–∞—Å—Å–∏–≤ Reels
 * @param projectId ID –ø—Ä–æ–µ–∫—Ç–∞
 * @param page –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
 * @param totalPages –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü
 * @param sourceType –¢–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (competitor –∏–ª–∏ hashtag)
 * @param sourceId ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞
 * @returns –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 */
export function createReelsListKeyboard(
  reels: ReelContent[],
  projectId: number,
  page: number = 1,
  totalPages: number = 1,
  sourceType?: "competitor" | "hashtag",
  sourceId?: string | number
) {
  const keyboard = [];

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ Reel
  for (const reel of reels) {
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ (–æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É –æ–ø–∏—Å–∞–Ω–∏—è)
    const caption = reel.caption
      ? reel.caption.length > 30
        ? reel.caption.substring(0, 27) + "..."
        : reel.caption
      : "–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è";

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    const viewsInfo = reel.views ? ` (${reel.views} üëÅÔ∏è)` : "";

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    const buttonText = `${caption}${viewsInfo}`;

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è Reel
    keyboard.push([
      Markup.button.callback(
        buttonText,
        `reel_details_${projectId}_${reel.instagram_id}`
      ),
    ]);
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–∞–Ω–∏—Ü
  if (totalPages > 1) {
    const paginationButtons = [];

    // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
    if (page > 1) {
      paginationButtons.push(
        Markup.button.callback(
          "‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∞—è",
          sourceType && sourceId
            ? `reels_page_${projectId}_${page - 1}_${sourceType}_${sourceId}`
            : `reels_page_${projectId}_${page - 1}`
        )
      );
    }

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    paginationButtons.push(
      Markup.button.callback(
        `${page} –∏–∑ ${totalPages}`,
        `reels_current_page`
      )
    );

    // –ö–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"
    if (page < totalPages) {
      paginationButtons.push(
        Markup.button.callback(
          "–°–ª–µ–¥—É—é—â–∞—è ‚û°Ô∏è",
          sourceType && sourceId
            ? `reels_page_${projectId}_${page + 1}_${sourceType}_${sourceId}`
            : `reels_page_${projectId}_${page + 1}`
        )
      );
    }

    keyboard.push(paginationButtons);
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  keyboard.push([
    Markup.button.callback("üîç –§–∏–ª—å—Ç—Ä—ã", `reels_filter_${projectId}`),
    Markup.button.callback("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", `reels_analytics_${projectId}`),
  ]);

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º Reels
  keyboard.push([
    Markup.button.callback("üìã –ö–æ–ª–ª–µ–∫—Ü–∏–∏ Reels", `collections_project_${projectId}`),
  ]);

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  if (sourceType && sourceId) {
    // –ï—Å–ª–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º Reels –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    if (sourceType === "competitor") {
      keyboard.push([
        Markup.button.callback(
          "üîô –ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç—É",
          `competitor_${projectId}_${sourceId}`
        ),
      ]);
    } else if (sourceType === "hashtag") {
      keyboard.push([
        Markup.button.callback(
          "üîô –ö —Ö–µ—à—Ç–µ–≥—É",
          `hashtag_${projectId}_${sourceId}`
        ),
      ]);
    }
  }

  // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø—Ä–æ–µ–∫—Ç—É
  keyboard.push([
    Markup.button.callback("üîô –ö –ø—Ä–æ–µ–∫—Ç—É", `project_${projectId}`),
  ]);

  return Markup.inlineKeyboard(keyboard);
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Reel
 * @param reel –û–±—ä–µ–∫—Ç Reel
 * @param projectId ID –ø—Ä–æ–µ–∫—Ç–∞
 * @param sourceType –¢–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (competitor –∏–ª–∏ hashtag)
 * @param sourceId ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞
 * @returns –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 */
export function createReelDetailsKeyboard(
  reel: ReelContent,
  projectId: number,
  sourceType?: "competitor" | "hashtag",
  sourceId?: string | number
) {
  const keyboard = [];

  // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ Reel –≤ Instagram
  keyboard.push([
    Markup.button.url("üé¨ –û—Ç–∫—Ä—ã—Ç—å –≤ Instagram", reel.url),
  ]);

  // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–æ–π
  if (reel.transcript_status === "completed") {
    // –ï—Å–ª–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ —É–∂–µ –µ—Å—Ç—å
    keyboard.push([
      Markup.button.callback("üìù –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É", `view_transcript_${projectId}_${reel.instagram_id}`),
      Markup.button.callback("üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫—É", `transcribe_reel_${projectId}_${reel.instagram_id}`),
    ]);

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —á–∞—Ç-–±–æ—Ç–∞
    keyboard.push([
      Markup.button.callback("ü§ñ –û–±—â–∞—Ç—å—Å—è —Å –≤–∏–¥–µ–æ", `chat_with_reel_${projectId}_${reel.instagram_id}`),
    ]);
  } else if (reel.transcript_status === "processing") {
    // –ï—Å–ª–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
    keyboard.push([
      Markup.button.callback("üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏", `check_transcript_${projectId}_${reel.instagram_id}`),
    ]);
  } else {
    // –ï—Å–ª–∏ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –Ω–µ—Ç –∏–ª–∏ –æ–Ω–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å
    keyboard.push([
      Markup.button.callback("üéôÔ∏è –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ", `transcribe_reel_${projectId}_${reel.instagram_id}`),
    ]);
  }

  // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  if (sourceType && sourceId) {
    // –ï—Å–ª–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º Reel –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    keyboard.push([
      Markup.button.callback(
        "üîô –ö —Å–ø–∏—Å–∫—É Reels",
        `reels_list_${projectId}_${sourceType}_${sourceId}`
      ),
    ]);
  } else {
    // –ï—Å–ª–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –≤—Å–µ Reels –ø—Ä–æ–µ–∫—Ç–∞
    keyboard.push([
      Markup.button.callback(
        "üîô –ö —Å–ø–∏—Å–∫—É Reels",
        `reels_list_${projectId}`
      ),
    ]);
  }

  // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –ø—Ä–æ–µ–∫—Ç—É
  keyboard.push([
    Markup.button.callback("üîô –ö –ø—Ä–æ–µ–∫—Ç—É", `project_${projectId}`),
  ]);

  return Markup.inlineKeyboard(keyboard);
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ Reels
 * @param projectId ID –ø—Ä–æ–µ–∫—Ç–∞
 * @param sourceType –¢–∏–ø –∏—Å—Ç–æ—á–Ω–∏–∫–∞ (competitor –∏–ª–∏ hashtag)
 * @param sourceId ID –∏—Å—Ç–æ—á–Ω–∏–∫–∞
 * @returns –û–±—ä–µ–∫—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 */
export function createReelsFilterKeyboard(
  projectId: number,
  sourceType?: "competitor" | "hashtag",
  sourceId?: string | number
) {
  const keyboard = [];

  // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º
  keyboard.push([
    Markup.button.callback(
      "üëÅÔ∏è > 1000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤",
      `reels_filter_views_${projectId}_1000${sourceType && sourceId ? `_${sourceType}_${sourceId}` : ""}`
    ),
    Markup.button.callback(
      "üëÅÔ∏è > 5000 –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤",
      `reels_filter_views_${projectId}_5000${sourceType && sourceId ? `_${sourceType}_${sourceId}` : ""}`
    ),
  ]);

  // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–∞—Ç–µ
  keyboard.push([
    Markup.button.callback(
      "üìÖ –ó–∞ –Ω–µ–¥–µ–ª—é",
      `reels_filter_date_${projectId}_week${sourceType && sourceId ? `_${sourceType}_${sourceId}` : ""}`
    ),
    Markup.button.callback(
      "üìÖ –ó–∞ –º–µ—Å—è—Ü",
      `reels_filter_date_${projectId}_month${sourceType && sourceId ? `_${sourceType}_${sourceId}` : ""}`
    ),
  ]);

  // –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
  keyboard.push([
    Markup.button.callback(
      "üìà –ü–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º",
      `reels_sort_${projectId}_views${sourceType && sourceId ? `_${sourceType}_${sourceId}` : ""}`
    ),
    Markup.button.callback(
      "üìÖ –ü–æ –¥–∞—Ç–µ",
      `reels_sort_${projectId}_date${sourceType && sourceId ? `_${sourceType}_${sourceId}` : ""}`
    ),
  ]);

  // –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  keyboard.push([
    Markup.button.callback(
      "üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã",
      `reels_filter_reset_${projectId}${sourceType && sourceId ? `_${sourceType}_${sourceId}` : ""}`
    ),
  ]);

  // –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
  if (sourceType && sourceId) {
    // –ï—Å–ª–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º Reels –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    keyboard.push([
      Markup.button.callback(
        "üîô –ö —Å–ø–∏—Å–∫—É Reels",
        `reels_list_${projectId}_${sourceType}_${sourceId}`
      ),
    ]);
  } else {
    // –ï—Å–ª–∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –≤—Å–µ Reels –ø—Ä–æ–µ–∫—Ç–∞
    keyboard.push([
      Markup.button.callback(
        "üîô –ö —Å–ø–∏—Å–∫—É Reels",
        `reels_list_${projectId}`
      ),
    ]);
  }

  return Markup.inlineKeyboard(keyboard);
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param dateString –°—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO
 * @returns –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
 */
export function formatDate(dateString: string): string {
  const date = new Date(dateString);
  return date.toLocaleDateString("ru-RU", {
    day: "2-digit",
    month: "2-digit",
    year: "numeric",
  });
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * @param views –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
 * @returns –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
 */
export function formatViews(views?: number): string {
  if (!views) return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö";

  if (views >= 1000000) {
    return `${(views / 1000000).toFixed(1)}M`;
  } else if (views >= 1000) {
    return `${(views / 1000).toFixed(1)}K`;
  } else {
    return views.toString();
  }
}
