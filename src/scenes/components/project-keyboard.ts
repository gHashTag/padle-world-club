import { Markup } from "telegraf";
import type { Project } from "@/types"; // –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–æ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –ø—É—Ç—å

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
 * @param projects –ú–∞—Å—Å–∏–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤
 * @returns –û–±—ä–µ–∫—Ç —Å reply_markup –¥–ª—è Telegraf
 */
export function generateProjectsKeyboard(projects: Project[]) {
  if (!projects || projects.length === 0) {
    console.log("[DEBUG] –ù–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É '–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç' —Å callback_data='create_project'");
    return Markup.inlineKeyboard([
      [Markup.button.callback("–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç", "create_project")],
      [Markup.button.callback("–í—ã–π—Ç–∏", "exit_scene")],
    ]);
  }

  const projectButtons = projects.map((project) => [
    Markup.button.callback(
      `${project.name} (${project.is_active ? "–ê–∫—Ç–∏–≤–µ–Ω" : "–ù–µ–∞–∫—Ç–∏–≤–µ–Ω"})`,
      `project_${project.id}`
    ),
  ]);

  projectButtons.push([
    Markup.button.callback("–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç", "create_project"),
  ]);
  console.log("[DEBUG] –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç' —Å callback_data='create_project'");
  projectButtons.push([Markup.button.callback("–í—ã–π—Ç–∏", "exit_scene")]);

  return Markup.inlineKeyboard(projectButtons);
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º
 * @param projectId ID –ø—Ä–æ–µ–∫—Ç–∞
 * @returns –û–±—ä–µ–∫—Ç —Å reply_markup –¥–ª—è Telegraf
 */
export function generateProjectMenuKeyboard(projectId: number) {
  return Markup.inlineKeyboard([
    [
      Markup.button.callback(
        "üë• –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞–º–∏",
        `competitors_project_${projectId}`
      ),
    ],
    [
      Markup.button.callback(
        "üìä –£–ø—Ä–∞–≤–ª—è—Ç—å —Ö–µ—à—Ç–µ–≥–∞–º–∏",
        `manage_hashtags_${projectId}`
      ),
    ],
    [
      Markup.button.callback(
        "‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∞–ø–∏–Ω–≥",
        `scrape_project_${projectId}`
      ),
    ],
    [
      Markup.button.callback(
        "üëÄ –ü—Ä–æ—Å–º–æ—Ç—Ä Reels",
        `reels_list_${projectId}`
      ),
    ],
    [
      Markup.button.callback(
        "üìã –ö–æ–ª–ª–µ–∫—Ü–∏–∏ Reels",
        `collections_project_${projectId}`
      ),
    ],

    [Markup.button.callback("üîô –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ–µ–∫—Ç–∞–º", "back_to_projects")],
  ]);
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
 * @param projectId ID –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
 * @returns –û–±—ä–µ–∫—Ç —Å reply_markup –¥–ª—è Telegraf
 */
export function generateNewProjectKeyboard(projectId: number) {
  return Markup.inlineKeyboard([
    [Markup.button.callback("üîô –ö —Å–ø–∏—Å–∫—É –ø—Ä–æ–µ–∫—Ç–æ–≤", "back_to_projects")],
    [
      Markup.button.callback(
        "üë• –î–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞",
        `add_competitor_${projectId}`
      ),
    ],
    [Markup.button.callback("üìä –î–æ–±–∞–≤–∏—Ç—å —Ö–µ—à—Ç–µ–≥", `add_hashtag_${projectId}`)],
  ]);
}
