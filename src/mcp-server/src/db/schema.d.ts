/**
 * Схема базы данных Drizzle ORM для Padel World Club
 * Этот файл является точкой входа для всех схем таблиц.
 */
export * from "./schema/enums";
export * from "./schema/user";
export * from "./schema/userAccountLink";
export * from "./schema/venue";
export * from "./schema/court";
export * from "./schema/booking";
export * from "./schema/bookingParticipant";
export * from "./schema/payment";
export * from "./schema/classDefinition";
export * from "./schema/classSchedule";
export * from "./schema/classParticipant";
export * from "./schema/trainingPackageDefinition";
export * from "./schema/userTrainingPackage";
export * from "./schema/gameSession";
export * from "./schema/gamePlayer";
export * from "./schema/ratingChange";
export * from "./schema/tournament";
export * from "./schema/tournamentParticipant";
export * from "./schema/tournamentTeam";
export * from "./schema/tournamentMatch";
export * from "./schema/productCategory";
export * from "./schema/product";
export * from "./schema/order";
export * from "./schema/task";
export * from "./schema/notification";
export * from "./schema/feedback";
import * as userSchema from "./schema/user";
import * as userAccountLinkSchema from "./schema/userAccountLink";
import * as venueSchema from "./schema/venue";
import * as courtSchema from "./schema/court";
import * as bookingSchema from "./schema/booking";
import * as bookingParticipantSchema from "./schema/bookingParticipant";
import * as paymentSchema from "./schema/payment";
import * as classDefinitionSchema from "./schema/classDefinition";
import * as classScheduleSchema from "./schema/classSchedule";
import * as classParticipantSchema from "./schema/classParticipant";
import * as trainingPackageDefinitionSchema from "./schema/trainingPackageDefinition";
import * as userTrainingPackageSchema from "./schema/userTrainingPackage";
import * as gameSessionSchema from "./schema/gameSession";
import * as gamePlayerSchema from "./schema/gamePlayer";
import * as ratingChangeSchema from "./schema/ratingChange";
import * as tournamentSchema from "./schema/tournament";
import * as tournamentParticipantSchema from "./schema/tournamentParticipant";
import * as tournamentTeamSchema from "./schema/tournamentTeam";
import * as tournamentMatchSchema from "./schema/tournamentMatch";
declare const allSchema: {
    tournamentMatches: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "tournament_match";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "tournament_match";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            tournamentId: import("drizzle-orm/pg-core").PgColumn<{
                name: "tournament_id";
                tableName: "tournament_match";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            courtId: import("drizzle-orm/pg-core").PgColumn<{
                name: "court_id";
                tableName: "tournament_match";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            matchNumber: import("drizzle-orm/pg-core").PgColumn<{
                name: "match_number";
                tableName: "tournament_match";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            round: import("drizzle-orm/pg-core").PgColumn<{
                name: "round";
                tableName: "tournament_match";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            startTime: import("drizzle-orm/pg-core").PgColumn<{
                name: "start_time";
                tableName: "tournament_match";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            endTime: import("drizzle-orm/pg-core").PgColumn<{
                name: "end_time";
                tableName: "tournament_match";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "tournament_match";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "cancelled" | "completed" | "in_progress" | "upcoming" | "registration_open";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["upcoming", "registration_open", "in_progress", "completed", "cancelled"];
                baseColumn: never;
            }, {}, {}>;
            score: import("drizzle-orm/pg-core").PgColumn<{
                name: "score";
                tableName: "tournament_match";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            winnerTeamId: import("drizzle-orm/pg-core").PgColumn<{
                name: "winner_team_id";
                tableName: "tournament_match";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            loserTeamId: import("drizzle-orm/pg-core").PgColumn<{
                name: "loser_team_id";
                tableName: "tournament_match";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            winnerPlayerIds: import("drizzle-orm/pg-core").PgColumn<{
                name: "winner_player_ids";
                tableName: "tournament_match";
                dataType: "array";
                columnType: "PgArray";
                data: string[];
                driverParam: string | string[];
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: import("drizzle-orm").Column<{
                    name: "winner_player_ids";
                    tableName: "tournament_match";
                    dataType: "string";
                    columnType: "PgUUID";
                    data: string;
                    driverParam: string;
                    notNull: false;
                    hasDefault: false;
                    enumValues: undefined;
                    baseColumn: never;
                }, object, object>;
            }, {}, {}>;
            loserPlayerIds: import("drizzle-orm/pg-core").PgColumn<{
                name: "loser_player_ids";
                tableName: "tournament_match";
                dataType: "array";
                columnType: "PgArray";
                data: string[];
                driverParam: string | string[];
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: import("drizzle-orm").Column<{
                    name: "loser_player_ids";
                    tableName: "tournament_match";
                    dataType: "string";
                    columnType: "PgUUID";
                    data: string;
                    driverParam: string;
                    notNull: false;
                    hasDefault: false;
                    enumValues: undefined;
                    baseColumn: never;
                }, object, object>;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "tournament_match";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "tournament_match";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    tournamentTeams: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "tournament_team";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "tournament_team";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            tournamentId: import("drizzle-orm/pg-core").PgColumn<{
                name: "tournament_id";
                tableName: "tournament_team";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            name: import("drizzle-orm/pg-core").PgColumn<{
                name: "name";
                tableName: "tournament_team";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            player1Id: import("drizzle-orm/pg-core").PgColumn<{
                name: "player1_id";
                tableName: "tournament_team";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            player2Id: import("drizzle-orm/pg-core").PgColumn<{
                name: "player2_id";
                tableName: "tournament_team";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "tournament_team";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "tournament_team";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    tournamentParticipants: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "tournament_participant";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "tournament_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            tournamentId: import("drizzle-orm/pg-core").PgColumn<{
                name: "tournament_id";
                tableName: "tournament_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "tournament_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            registrationDate: import("drizzle-orm/pg-core").PgColumn<{
                name: "registration_date";
                tableName: "tournament_participant";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "tournament_participant";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "registered" | "checked_in" | "withdrawn";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["registered", "checked_in", "withdrawn"];
                baseColumn: never;
            }, {}, {}>;
            partnerUserId: import("drizzle-orm/pg-core").PgColumn<{
                name: "partner_user_id";
                tableName: "tournament_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            teamId: import("drizzle-orm/pg-core").PgColumn<{
                name: "team_id";
                tableName: "tournament_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "tournament_participant";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "tournament_participant";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    tournaments: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "tournament";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            venueId: import("drizzle-orm/pg-core").PgColumn<{
                name: "venue_id";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            name: import("drizzle-orm/pg-core").PgColumn<{
                name: "name";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            description: import("drizzle-orm/pg-core").PgColumn<{
                name: "description";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            tournamentType: import("drizzle-orm/pg-core").PgColumn<{
                name: "tournament_type";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "other" | "singles_elimination" | "doubles_round_robin";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["singles_elimination", "doubles_round_robin", "other"];
                baseColumn: never;
            }, {}, {}>;
            skillLevelCategory: import("drizzle-orm/pg-core").PgColumn<{
                name: "skill_level_category";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "beginner" | "intermediate" | "advanced" | "professional";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["beginner", "intermediate", "advanced", "professional"];
                baseColumn: never;
            }, {}, {}>;
            startDate: import("drizzle-orm/pg-core").PgColumn<{
                name: "start_date";
                tableName: "tournament";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            endDate: import("drizzle-orm/pg-core").PgColumn<{
                name: "end_date";
                tableName: "tournament";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            registrationFee: import("drizzle-orm/pg-core").PgColumn<{
                name: "registration_fee";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            maxParticipants: import("drizzle-orm/pg-core").PgColumn<{
                name: "max_participants";
                tableName: "tournament";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "cancelled" | "completed" | "in_progress" | "upcoming" | "registration_open";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["upcoming", "registration_open", "in_progress", "completed", "cancelled"];
                baseColumn: never;
            }, {}, {}>;
            rulesUrl: import("drizzle-orm/pg-core").PgColumn<{
                name: "rules_url";
                tableName: "tournament";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "tournament";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "tournament";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    ratingChanges: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "rating_change";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "rating_change";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "rating_change";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            oldRating: import("drizzle-orm/pg-core").PgColumn<{
                name: "old_rating";
                tableName: "rating_change";
                dataType: "number";
                columnType: "PgReal";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            newRating: import("drizzle-orm/pg-core").PgColumn<{
                name: "new_rating";
                tableName: "rating_change";
                dataType: "number";
                columnType: "PgReal";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            changeReason: import("drizzle-orm/pg-core").PgColumn<{
                name: "change_reason";
                tableName: "rating_change";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "tournament_match" | "game_session" | "manual_adjustment";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["game_session", "tournament_match", "manual_adjustment"];
                baseColumn: never;
            }, {}, {}>;
            relatedGameSessionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "related_game_session_id";
                tableName: "rating_change";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            relatedTournamentMatchId: import("drizzle-orm/pg-core").PgColumn<{
                name: "related_tournament_match_id";
                tableName: "rating_change";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            notes: import("drizzle-orm/pg-core").PgColumn<{
                name: "notes";
                tableName: "rating_change";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "rating_change";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "rating_change";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    gamePlayers: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "game_player";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "game_player";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            gameSessionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "game_session_id";
                tableName: "game_player";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "game_player";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            participationStatus: import("drizzle-orm/pg-core").PgColumn<{
                name: "participation_status";
                tableName: "game_player";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "cancelled" | "registered" | "attended" | "no_show";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["registered", "attended", "no_show", "cancelled"];
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "game_player";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "game_player";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    gameSessions: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "game_session";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            venueId: import("drizzle-orm/pg-core").PgColumn<{
                name: "venue_id";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            courtId: import("drizzle-orm/pg-core").PgColumn<{
                name: "court_id";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            startTime: import("drizzle-orm/pg-core").PgColumn<{
                name: "start_time";
                tableName: "game_session";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            endTime: import("drizzle-orm/pg-core").PgColumn<{
                name: "end_time";
                tableName: "game_session";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            gameType: import("drizzle-orm/pg-core").PgColumn<{
                name: "game_type";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "public_match" | "private_match";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["public_match", "private_match"];
                baseColumn: never;
            }, {}, {}>;
            neededSkillLevel: import("drizzle-orm/pg-core").PgColumn<{
                name: "needed_skill_level";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "beginner" | "intermediate" | "advanced" | "professional";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["beginner", "intermediate", "advanced", "professional"];
                baseColumn: never;
            }, {}, {}>;
            maxPlayers: import("drizzle-orm/pg-core").PgColumn<{
                name: "max_players";
                tableName: "game_session";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currentPlayers: import("drizzle-orm/pg-core").PgColumn<{
                name: "current_players";
                tableName: "game_session";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "cancelled" | "completed" | "open_for_players" | "full" | "in_progress";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["open_for_players", "full", "in_progress", "completed", "cancelled"];
                baseColumn: never;
            }, {}, {}>;
            createdByUserId: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_by_user_id";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            hostUserId: import("drizzle-orm/pg-core").PgColumn<{
                name: "host_user_id";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            matchScore: import("drizzle-orm/pg-core").PgColumn<{
                name: "match_score";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            winnerUserIds: import("drizzle-orm/pg-core").PgColumn<{
                name: "winner_user_ids";
                tableName: "game_session";
                dataType: "array";
                columnType: "PgArray";
                data: string[];
                driverParam: string | string[];
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: import("drizzle-orm").Column<{
                    name: "winner_user_ids";
                    tableName: "game_session";
                    dataType: "string";
                    columnType: "PgUUID";
                    data: string;
                    driverParam: string;
                    notNull: false;
                    hasDefault: false;
                    enumValues: undefined;
                    baseColumn: never;
                }, object, object>;
            }, {}, {}>;
            relatedBookingId: import("drizzle-orm/pg-core").PgColumn<{
                name: "related_booking_id";
                tableName: "game_session";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "game_session";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "game_session";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    userTrainingPackages: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "user_training_package";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "user_training_package";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "user_training_package";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            packageDefinitionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "package_definition_id";
                tableName: "user_training_package";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            purchaseDate: import("drizzle-orm/pg-core").PgColumn<{
                name: "purchase_date";
                tableName: "user_training_package";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            expirationDate: import("drizzle-orm/pg-core").PgColumn<{
                name: "expiration_date";
                tableName: "user_training_package";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            sessionsUsed: import("drizzle-orm/pg-core").PgColumn<{
                name: "sessions_used";
                tableName: "user_training_package";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            sessionsTotal: import("drizzle-orm/pg-core").PgColumn<{
                name: "sessions_total";
                tableName: "user_training_package";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "user_training_package";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "cancelled" | "completed" | "active" | "expired";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["active", "expired", "completed", "cancelled"];
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "user_training_package";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "user_training_package";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    trainingPackageDefinitions: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "training_package_definition";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "training_package_definition";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            name: import("drizzle-orm/pg-core").PgColumn<{
                name: "name";
                tableName: "training_package_definition";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            description: import("drizzle-orm/pg-core").PgColumn<{
                name: "description";
                tableName: "training_package_definition";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            packageType: import("drizzle-orm/pg-core").PgColumn<{
                name: "package_type";
                tableName: "training_package_definition";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "group_training" | "private_training";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["group_training", "private_training"];
                baseColumn: never;
            }, {}, {}>;
            numberOfSessions: import("drizzle-orm/pg-core").PgColumn<{
                name: "number_of_sessions";
                tableName: "training_package_definition";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            price: import("drizzle-orm/pg-core").PgColumn<{
                name: "price";
                tableName: "training_package_definition";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "training_package_definition";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            validityDurationDays: import("drizzle-orm/pg-core").PgColumn<{
                name: "validity_duration_days";
                tableName: "training_package_definition";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            isActive: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_active";
                tableName: "training_package_definition";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "training_package_definition";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "training_package_definition";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    classParticipants: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "class_participant";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "class_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            classScheduleId: import("drizzle-orm/pg-core").PgColumn<{
                name: "class_schedule_id";
                tableName: "class_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "class_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "class_participant";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "cancelled" | "registered" | "attended" | "no_show";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["registered", "attended", "no_show", "cancelled"];
                baseColumn: never;
            }, {}, {}>;
            paidWithPackageId: import("drizzle-orm/pg-core").PgColumn<{
                name: "paid_with_package_id";
                tableName: "class_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "class_participant";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "class_participant";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    classSchedules: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "class_schedule";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "class_schedule";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            classDefinitionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "class_definition_id";
                tableName: "class_schedule";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            venueId: import("drizzle-orm/pg-core").PgColumn<{
                name: "venue_id";
                tableName: "class_schedule";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            instructorId: import("drizzle-orm/pg-core").PgColumn<{
                name: "instructor_id";
                tableName: "class_schedule";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            startTime: import("drizzle-orm/pg-core").PgColumn<{
                name: "start_time";
                tableName: "class_schedule";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            endTime: import("drizzle-orm/pg-core").PgColumn<{
                name: "end_time";
                tableName: "class_schedule";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            courtId: import("drizzle-orm/pg-core").PgColumn<{
                name: "court_id";
                tableName: "class_schedule";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            maxParticipants: import("drizzle-orm/pg-core").PgColumn<{
                name: "max_participants";
                tableName: "class_schedule";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currentParticipants: import("drizzle-orm/pg-core").PgColumn<{
                name: "current_participants";
                tableName: "class_schedule";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "class_schedule";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "cancelled" | "completed" | "scheduled" | "draft";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["scheduled", "cancelled", "completed", "draft"];
                baseColumn: never;
            }, {}, {}>;
            relatedBookingId: import("drizzle-orm/pg-core").PgColumn<{
                name: "related_booking_id";
                tableName: "class_schedule";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "class_schedule";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "class_schedule";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    classDefinitions: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "class_definition";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "class_definition";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            name: import("drizzle-orm/pg-core").PgColumn<{
                name: "name";
                tableName: "class_definition";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            description: import("drizzle-orm/pg-core").PgColumn<{
                name: "description";
                tableName: "class_definition";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            classType: import("drizzle-orm/pg-core").PgColumn<{
                name: "class_type";
                tableName: "class_definition";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "group_training" | "open_play_session" | "coached_drill";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["group_training", "open_play_session", "coached_drill"];
                baseColumn: never;
            }, {}, {}>;
            basePrice: import("drizzle-orm/pg-core").PgColumn<{
                name: "base_price";
                tableName: "class_definition";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "class_definition";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            minSkillLevel: import("drizzle-orm/pg-core").PgColumn<{
                name: "min_skill_level";
                tableName: "class_definition";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "beginner" | "intermediate" | "advanced" | "professional";
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: ["beginner", "intermediate", "advanced", "professional"];
                baseColumn: never;
            }, {}, {}>;
            maxSkillLevel: import("drizzle-orm/pg-core").PgColumn<{
                name: "max_skill_level";
                tableName: "class_definition";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "beginner" | "intermediate" | "advanced" | "professional";
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: ["beginner", "intermediate", "advanced", "professional"];
                baseColumn: never;
            }, {}, {}>;
            isActive: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_active";
                tableName: "class_definition";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "class_definition";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "class_definition";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    payments: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "payment";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "payment";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "payment";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            amount: import("drizzle-orm/pg-core").PgColumn<{
                name: "amount";
                tableName: "payment";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "payment";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "payment";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "success" | "failed" | "pending" | "refunded" | "partial";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["success", "failed", "pending", "refunded", "partial"];
                baseColumn: never;
            }, {}, {}>;
            paymentMethod: import("drizzle-orm/pg-core").PgColumn<{
                name: "payment_method";
                tableName: "payment";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "card" | "cash" | "bank_transfer" | "bonus_points";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["card", "cash", "bank_transfer", "bonus_points"];
                baseColumn: never;
            }, {}, {}>;
            gatewayTransactionId: import("drizzle-orm/pg-core").PgColumn<{
                name: "gateway_transaction_id";
                tableName: "payment";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            description: import("drizzle-orm/pg-core").PgColumn<{
                name: "description";
                tableName: "payment";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            relatedBookingParticipantId: import("drizzle-orm/pg-core").PgColumn<{
                name: "related_booking_participant_id";
                tableName: "payment";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            relatedOrderId: import("drizzle-orm/pg-core").PgColumn<{
                name: "related_order_id";
                tableName: "payment";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            relatedUserTrainingPackageId: import("drizzle-orm/pg-core").PgColumn<{
                name: "related_user_training_package_id";
                tableName: "payment";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "payment";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "payment";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    bookingParticipants: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "booking_participant";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "booking_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            bookingId: import("drizzle-orm/pg-core").PgColumn<{
                name: "booking_id";
                tableName: "booking_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "booking_participant";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            amountOwed: import("drizzle-orm/pg-core").PgColumn<{
                name: "amount_owed";
                tableName: "booking_participant";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            amountPaid: import("drizzle-orm/pg-core").PgColumn<{
                name: "amount_paid";
                tableName: "booking_participant";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            paymentStatus: import("drizzle-orm/pg-core").PgColumn<{
                name: "payment_status";
                tableName: "booking_participant";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "success" | "failed" | "pending" | "refunded" | "partial";
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: ["success", "failed", "pending", "refunded", "partial"];
                baseColumn: never;
            }, {}, {}>;
            participationStatus: import("drizzle-orm/pg-core").PgColumn<{
                name: "participation_status";
                tableName: "booking_participant";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "cancelled" | "registered" | "attended" | "no_show";
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: ["registered", "attended", "no_show", "cancelled"];
                baseColumn: never;
            }, {}, {}>;
            isHost: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_host";
                tableName: "booking_participant";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "booking_participant";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "booking_participant";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    bookings: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "booking";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "booking";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            courtId: import("drizzle-orm/pg-core").PgColumn<{
                name: "court_id";
                tableName: "booking";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            startTime: import("drizzle-orm/pg-core").PgColumn<{
                name: "start_time";
                tableName: "booking";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            endTime: import("drizzle-orm/pg-core").PgColumn<{
                name: "end_time";
                tableName: "booking";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            durationMinutes: import("drizzle-orm/pg-core").PgColumn<{
                name: "duration_minutes";
                tableName: "booking";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            status: import("drizzle-orm/pg-core").PgColumn<{
                name: "status";
                tableName: "booking";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "confirmed" | "pending_payment" | "cancelled" | "completed";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["confirmed", "pending_payment", "cancelled", "completed"];
                baseColumn: never;
            }, {}, {}>;
            totalAmount: import("drizzle-orm/pg-core").PgColumn<{
                name: "total_amount";
                tableName: "booking";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            currency: import("drizzle-orm/pg-core").PgColumn<{
                name: "currency";
                tableName: "booking";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            bookedByUserId: import("drizzle-orm/pg-core").PgColumn<{
                name: "booked_by_user_id";
                tableName: "booking";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            bookingPurpose: import("drizzle-orm/pg-core").PgColumn<{
                name: "booking_purpose";
                tableName: "booking";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "other" | "free_play" | "group_training" | "private_training" | "tournament_match";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["free_play", "group_training", "private_training", "tournament_match", "other"];
                baseColumn: never;
            }, {}, {}>;
            relatedEntityId: import("drizzle-orm/pg-core").PgColumn<{
                name: "related_entity_id";
                tableName: "booking";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            notes: import("drizzle-orm/pg-core").PgColumn<{
                name: "notes";
                tableName: "booking";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "booking";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "booking";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    courts: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "court";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "court";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            venueId: import("drizzle-orm/pg-core").PgColumn<{
                name: "venue_id";
                tableName: "court";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            name: import("drizzle-orm/pg-core").PgColumn<{
                name: "name";
                tableName: "court";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            courtType: import("drizzle-orm/pg-core").PgColumn<{
                name: "court_type";
                tableName: "court";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "paddle" | "tennis";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["paddle", "tennis"];
                baseColumn: never;
            }, {}, {}>;
            hourlyRate: import("drizzle-orm/pg-core").PgColumn<{
                name: "hourly_rate";
                tableName: "court";
                dataType: "string";
                columnType: "PgNumeric";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            description: import("drizzle-orm/pg-core").PgColumn<{
                name: "description";
                tableName: "court";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            isActive: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_active";
                tableName: "court";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "court";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "court";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    courtsRelations: import("drizzle-orm").Relations<"court", {
        venue: import("drizzle-orm").One<"venue", true>;
    }>;
    venues: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "venue";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "venue";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            name: import("drizzle-orm/pg-core").PgColumn<{
                name: "name";
                tableName: "venue";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            address: import("drizzle-orm/pg-core").PgColumn<{
                name: "address";
                tableName: "venue";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            city: import("drizzle-orm/pg-core").PgColumn<{
                name: "city";
                tableName: "venue";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            country: import("drizzle-orm/pg-core").PgColumn<{
                name: "country";
                tableName: "venue";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            phoneNumber: import("drizzle-orm/pg-core").PgColumn<{
                name: "phone_number";
                tableName: "venue";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            email: import("drizzle-orm/pg-core").PgColumn<{
                name: "email";
                tableName: "venue";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            isActive: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_active";
                tableName: "venue";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            gCalResourceId: import("drizzle-orm/pg-core").PgColumn<{
                name: "gcal_resource_id";
                tableName: "venue";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "venue";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "venue";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    userAccountLinks: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "user_account_link";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "user_account_link";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            userId: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_id";
                tableName: "user_account_link";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            platform: import("drizzle-orm/pg-core").PgColumn<{
                name: "platform";
                tableName: "user_account_link";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "whatsapp" | "telegram" | "email" | "app_push";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["whatsapp", "telegram", "email", "app_push"];
                baseColumn: never;
            }, {}, {}>;
            platformUserId: import("drizzle-orm/pg-core").PgColumn<{
                name: "platform_user_id";
                tableName: "user_account_link";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            isPrimary: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_primary";
                tableName: "user_account_link";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "user_account_link";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "user_account_link";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    userAccountLinksRelations: import("drizzle-orm").Relations<"user_account_link", {
        user: import("drizzle-orm").One<"user", true>;
    }>;
    users: import("drizzle-orm/pg-core").PgTableWithColumns<{
        name: "user";
        schema: undefined;
        columns: {
            id: import("drizzle-orm/pg-core").PgColumn<{
                name: "id";
                tableName: "user";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            username: import("drizzle-orm/pg-core").PgColumn<{
                name: "username";
                tableName: "user";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            passwordHash: import("drizzle-orm/pg-core").PgColumn<{
                name: "password_hash";
                tableName: "user";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            firstName: import("drizzle-orm/pg-core").PgColumn<{
                name: "first_name";
                tableName: "user";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            lastName: import("drizzle-orm/pg-core").PgColumn<{
                name: "last_name";
                tableName: "user";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            email: import("drizzle-orm/pg-core").PgColumn<{
                name: "email";
                tableName: "user";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            phone: import("drizzle-orm/pg-core").PgColumn<{
                name: "phone";
                tableName: "user";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            memberId: import("drizzle-orm/pg-core").PgColumn<{
                name: "member_id";
                tableName: "user";
                dataType: "string";
                columnType: "PgVarchar";
                data: string;
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            userRole: import("drizzle-orm/pg-core").PgColumn<{
                name: "user_role";
                tableName: "user";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "player" | "coach" | "club_staff" | "admin";
                driverParam: string;
                notNull: true;
                hasDefault: false;
                enumValues: ["player", "coach", "club_staff", "admin"];
                baseColumn: never;
            }, {}, {}>;
            currentRating: import("drizzle-orm/pg-core").PgColumn<{
                name: "current_rating";
                tableName: "user";
                dataType: "number";
                columnType: "PgReal";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            bonusPoints: import("drizzle-orm/pg-core").PgColumn<{
                name: "bonus_points";
                tableName: "user";
                dataType: "number";
                columnType: "PgInteger";
                data: number;
                driverParam: string | number;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            profileImageUrl: import("drizzle-orm/pg-core").PgColumn<{
                name: "profile_image_url";
                tableName: "user";
                dataType: "string";
                columnType: "PgText";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: [string, ...string[]];
                baseColumn: never;
            }, {}, {}>;
            gender: import("drizzle-orm/pg-core").PgColumn<{
                name: "gender";
                tableName: "user";
                dataType: "string";
                columnType: "PgEnumColumn";
                data: "male" | "female" | "other" | "unknown";
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: ["male", "female", "other", "unknown"];
                baseColumn: never;
            }, {}, {}>;
            dateOfBirth: import("drizzle-orm/pg-core").PgColumn<{
                name: "date_of_birth";
                tableName: "user";
                dataType: "string";
                columnType: "PgDateString";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            homeVenueId: import("drizzle-orm/pg-core").PgColumn<{
                name: "home_venue_id";
                tableName: "user";
                dataType: "string";
                columnType: "PgUUID";
                data: string;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            isAccountVerified: import("drizzle-orm/pg-core").PgColumn<{
                name: "is_account_verified";
                tableName: "user";
                dataType: "boolean";
                columnType: "PgBoolean";
                data: boolean;
                driverParam: boolean;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            lastLoginAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "last_login_at";
                tableName: "user";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            lastActivityAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "last_activity_at";
                tableName: "user";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: false;
                hasDefault: false;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            createdAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "created_at";
                tableName: "user";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
            updatedAt: import("drizzle-orm/pg-core").PgColumn<{
                name: "updated_at";
                tableName: "user";
                dataType: "date";
                columnType: "PgTimestamp";
                data: Date;
                driverParam: string;
                notNull: true;
                hasDefault: true;
                enumValues: undefined;
                baseColumn: never;
            }, {}, {}>;
        };
        dialect: "pg";
    }>;
    usersRelations: import("drizzle-orm").Relations<"user", {
        accountLinks: import("drizzle-orm").Many<"user_account_link">;
    }>;
    userRoleEnum: import("drizzle-orm/pg-core").PgEnum<["player", "coach", "club_staff", "admin"]>;
    userSkillLevelEnum: import("drizzle-orm/pg-core").PgEnum<["beginner", "intermediate", "advanced", "professional"]>;
    genderEnum: import("drizzle-orm/pg-core").PgEnum<["male", "female", "other", "unknown"]>;
    notificationChannelEnum: import("drizzle-orm/pg-core").PgEnum<["whatsapp", "telegram", "email", "app_push"]>;
    courtTypeEnum: import("drizzle-orm/pg-core").PgEnum<["paddle", "tennis"]>;
    bookingStatusEnum: import("drizzle-orm/pg-core").PgEnum<["confirmed", "pending_payment", "cancelled", "completed"]>;
    paymentStatusEnum: import("drizzle-orm/pg-core").PgEnum<["success", "failed", "pending", "refunded", "partial"]>;
    paymentMethodEnum: import("drizzle-orm/pg-core").PgEnum<["card", "cash", "bank_transfer", "bonus_points"]>;
    bookingPurposeEnum: import("drizzle-orm/pg-core").PgEnum<["free_play", "group_training", "private_training", "tournament_match", "other"]>;
    classParticipantStatusEnum: import("drizzle-orm/pg-core").PgEnum<["registered", "attended", "no_show", "cancelled"]>;
    classTypeEnum: import("drizzle-orm/pg-core").PgEnum<["group_training", "open_play_session", "coached_drill"]>;
    classScheduleStatusEnum: import("drizzle-orm/pg-core").PgEnum<["scheduled", "cancelled", "completed", "draft"]>;
    trainingPackageTypeEnum: import("drizzle-orm/pg-core").PgEnum<["group_training", "private_training"]>;
    userTrainingPackageStatusEnum: import("drizzle-orm/pg-core").PgEnum<["active", "expired", "completed", "cancelled"]>;
    gameSessionStatusEnum: import("drizzle-orm/pg-core").PgEnum<["open_for_players", "full", "in_progress", "completed", "cancelled"]>;
    gameTypeEnum: import("drizzle-orm/pg-core").PgEnum<["public_match", "private_match"]>;
    ratingChangeReasonEnum: import("drizzle-orm/pg-core").PgEnum<["game_session", "tournament_match", "manual_adjustment"]>;
    tournamentTypeEnum: import("drizzle-orm/pg-core").PgEnum<["singles_elimination", "doubles_round_robin", "other"]>;
    tournamentStatusEnum: import("drizzle-orm/pg-core").PgEnum<["upcoming", "registration_open", "in_progress", "completed", "cancelled"]>;
    tournamentParticipantStatusEnum: import("drizzle-orm/pg-core").PgEnum<["registered", "checked_in", "withdrawn"]>;
};
export default allSchema;
export type User = typeof userSchema.users.$inferSelect;
export type NewUser = typeof userSchema.users.$inferInsert;
export type UserAccountLink = typeof userAccountLinkSchema.userAccountLinks.$inferSelect;
export type NewUserAccountLink = typeof userAccountLinkSchema.userAccountLinks.$inferInsert;
export type Venue = typeof venueSchema.venues.$inferSelect;
export type NewVenue = typeof venueSchema.venues.$inferInsert;
export type Court = typeof courtSchema.courts.$inferSelect;
export type NewCourt = typeof courtSchema.courts.$inferInsert;
export type Booking = typeof bookingSchema.bookings.$inferSelect;
export type NewBooking = typeof bookingSchema.bookings.$inferInsert;
export type BookingParticipant = typeof bookingParticipantSchema.bookingParticipants.$inferSelect;
export type NewBookingParticipant = typeof bookingParticipantSchema.bookingParticipants.$inferInsert;
export type Payment = typeof paymentSchema.payments.$inferSelect;
export type NewPayment = typeof paymentSchema.payments.$inferInsert;
export type ClassDefinition = typeof classDefinitionSchema.classDefinitions.$inferSelect;
export type NewClassDefinition = typeof classDefinitionSchema.classDefinitions.$inferInsert;
export type ClassSchedule = typeof classScheduleSchema.classSchedules.$inferSelect;
export type NewClassSchedule = typeof classScheduleSchema.classSchedules.$inferInsert;
export type ClassParticipant = typeof classParticipantSchema.classParticipants.$inferSelect;
export type NewClassParticipant = typeof classParticipantSchema.classParticipants.$inferInsert;
export type TrainingPackageDefinition = typeof trainingPackageDefinitionSchema.trainingPackageDefinitions.$inferSelect;
export type NewTrainingPackageDefinition = typeof trainingPackageDefinitionSchema.trainingPackageDefinitions.$inferInsert;
export type UserTrainingPackage = typeof userTrainingPackageSchema.userTrainingPackages.$inferSelect;
export type NewUserTrainingPackage = typeof userTrainingPackageSchema.userTrainingPackages.$inferInsert;
export type GameSession = typeof gameSessionSchema.gameSessions.$inferSelect;
export type NewGameSession = typeof gameSessionSchema.gameSessions.$inferInsert;
export type GamePlayer = typeof gamePlayerSchema.gamePlayers.$inferSelect;
export type NewGamePlayer = typeof gamePlayerSchema.gamePlayers.$inferInsert;
export type RatingChange = typeof ratingChangeSchema.ratingChanges.$inferSelect;
export type NewRatingChange = typeof ratingChangeSchema.ratingChanges.$inferInsert;
export type Tournament = typeof tournamentSchema.tournaments.$inferSelect;
export type NewTournament = typeof tournamentSchema.tournaments.$inferInsert;
export type TournamentParticipant = typeof tournamentParticipantSchema.tournamentParticipants.$inferSelect;
export type NewTournamentParticipant = typeof tournamentParticipantSchema.tournamentParticipants.$inferInsert;
export type TournamentTeam = typeof tournamentTeamSchema.tournamentTeams.$inferSelect;
export type NewTournamentTeam = typeof tournamentTeamSchema.tournamentTeams.$inferInsert;
export type TournamentMatch = typeof tournamentMatchSchema.tournamentMatches.$inferSelect;
export type NewTournamentMatch = typeof tournamentMatchSchema.tournamentMatches.$inferInsert;
