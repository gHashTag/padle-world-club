import * as dotenv from "dotenv";
import { Telegraf, session, Markup /*, MemorySessionStore*/ } from "telegraf";
// import { Scenes } from "telegraf"; // –£–¥–∞–ª—è–µ–º –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–π –∏–º–ø–æ—Ä—Ç Scenes
import { NeonAdapter } from "./adapters/neon-adapter";
import { setupInstagramScraperBot } from "../index"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ index.ts
import { logger, LogLevel, LogType } from "./utils/logger"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–≥–≥–µ—Ä
import type {
  ScraperBotContext,
  InstagramScraperBotConfig,
  StorageAdapter,
} from "./types";

// <<< –°–æ–∑–¥–∞–µ–º middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏/—Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è >>>
async function ensureUserMiddleware(
  ctx: ScraperBotContext,
  next: () => Promise<void>
) {
  // +++ –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã middleware +++
  console.log("[DEBUG] ensureUserMiddleware: –ó–∞–ø—É—Å–∫...");

  if (!ctx.from?.id) {
    console.warn("[DEBUG] ensureUserMiddleware: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–µ–∑ ctx.from.id.");
    return; // –ù–µ –º–æ–∂–µ–º –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ ID
  }
  const telegramId = ctx.from.id; // –°–æ—Ö—Ä–∞–Ω–∏–º –¥–ª—è –ª–æ–≥–æ–≤
  console.log(
    `[DEBUG] ensureUserMiddleware: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}.`
  );

  if (!ctx.storage) {
    console.error(
      "[ERROR] ensureUserMiddleware: Middleware –≤—ã–∑–≤–∞–Ω–æ –¥–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ctx.storage"
    );
    return;
  }

  try {
    console.log(
      `[DEBUG] ensureUserMiddleware: –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}...`
    );
    let user = await ctx.storage.getUserByTelegramId(telegramId);

    if (!user) {
      console.log(
        `[INFO] ensureUserMiddleware: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è...`
      );
      const username =
        ctx.from.username || ctx.from.first_name || `User_${telegramId}`;
      // +++ –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º createUser +++
      console.log(
        `[DEBUG] ensureUserMiddleware: –í—ã–∑–æ–≤ createUser –¥–ª—è ${telegramId} —Å username "${username}"...`
      );
      user = await ctx.storage.createUser(telegramId, username);
      // +++ –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥ –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ createUser +++
      if (user) {
        console.log(
          `[INFO] ensureUserMiddleware: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} (${username}) —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω. ID –≤ –±–∞–∑–µ: ${user.id}`
        );
      } else {
        // !!! –í–∞–∂–Ω—ã–π –ª–æ–≥, –µ—Å–ª–∏ createUser –≤–µ—Ä–Ω—É–ª null/undefined
        console.error(
          `[ERROR] ensureUserMiddleware: createUser –¥–ª—è ${telegramId} –≤–µ—Ä–Ω—É–ª ${user}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï —Å–æ–∑–¥–∞–Ω.`
        );
        // –†–µ—à–∞–µ–º, —á—Ç–æ –¥–µ–ª–∞—Ç—å - –ø—Ä–µ—Ä–≤–∞—Ç—å –∏–ª–∏ –Ω–µ—Ç? –ü–æ–∫–∞ –ø—Ä–µ—Ä–≤–µ–º.
        await ctx
          .reply(
            "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤–∞—à—É —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
          )
          .catch(() => {});
        return;
      }
    } else {
      console.log(
        `[INFO] ensureUserMiddleware: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${telegramId} (${user.username || "–±–µ–∑ username"}) –Ω–∞–π–¥–µ–Ω. ID –≤ –±–∞–∑–µ: ${user.id}.`
      );
    }

    // +++ –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥ –ø–µ—Ä–µ–¥ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ–º ctx.user +++
    console.log(
      `[DEBUG] ensureUserMiddleware: –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ ctx.session.user –¥–ª—è ${telegramId}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:`,
      JSON.stringify(user)
    );
    if (!ctx.session) {
      ctx.session = {};
    }
    ctx.session.user = user; // –ò—Å–ø–æ–ª—å–∑—É–µ–º ctx.session –≤–º–µ—Å—Ç–æ ctx.scene.session
    // +++ –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥ –ø–æ—Å–ª–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏—è ctx.user +++
    console.log(
      `[DEBUG] ensureUserMiddleware: ctx.session.user —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ –¥–ª—è ${telegramId}.`
    );
  } catch (error) {
    console.error(
      `[ERROR] ensureUserMiddleware: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ/—Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}:`,
      error
    );
    await ctx
      .reply(
        "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
      )
      .catch(() => {});
    return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
  }

  // +++ –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥ –ø–µ—Ä–µ–¥ –≤—ã–∑–æ–≤–æ–º next() +++
  console.log(
    `[DEBUG] ensureUserMiddleware: –í—ã–∑–æ–≤ next() –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}.`
  );
  return next();
}

async function startBot() {
  dotenv.config(); // –£–±—Ä–∞–ª–∏ —è–≤–Ω—ã–π path, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ–∏—Å–∫ .env

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
  logger.configure({
    logToConsole: true,
    minLevel: LogLevel.DEBUG
  });
  logger.info("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞", { type: LogType.SYSTEM });

  const BOT_TOKEN = process.env.BOT_TOKEN;
  const DATABASE_URL = process.env.DATABASE_URL; // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ, —Ç.–∫. –∞–¥–∞–ø—Ç–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –µ–≥–æ –≤–Ω—É—Ç—Ä–∏

  if (!BOT_TOKEN) {
    console.error("–û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ.");
    process.exit(1);
  }

  if (!DATABASE_URL) {
    // –î–∞–∂–µ –µ—Å–ª–∏ –∞–¥–∞–ø—Ç–µ—Ä —á–∏—Ç–∞–µ—Ç –µ–≥–æ —Å–∞–º, –Ω–∞–º –Ω—É–∂–Ω–æ —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω –µ—Å—Ç—å
    console.error("–û—à–∏–±–∫–∞: DATABASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ.");
    process.exit(1);
  }

  let storageAdapter: NeonAdapter | undefined;

  try {
    console.log("–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏–∑ src/bot.ts...");
    const bot = new Telegraf<ScraperBotContext>(BOT_TOKEN);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º session middleware –∏–∑ Telegraf
    const { session } = require('telegraf');
    bot.use(session());

    // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏
    bot.use((ctx, next) => {
      console.log("[DEBUG] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏ –≤ middleware");

      // –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ—Å—Å–∏–∏
      console.log("[DEBUG] ctx.session —Å—É—â–µ—Å—Ç–≤—É–µ—Ç?", !!ctx.session);

      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º ctx.session, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç (—Ö–æ—Ç—è session middleware –¥–æ–ª–∂–µ–Ω —ç—Ç–æ –¥–µ–ª–∞—Ç—å)
      if (!ctx.session) {
        console.log("[DEBUG] ctx.session –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º");
        (ctx as any).session = {
          user: null,
          __scenes: {}
        };
      }

      return next();
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–∞–ø—Ç–µ—Ä –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç
    storageAdapter = new NeonAdapter();
    bot.use((ctx, next) => {
      ctx.storage = storageAdapter as StorageAdapter;
      return next();
    });

    // <<< –°–ù–ê–ß–ê–õ–ê –ù–ê–°–¢–†–ê–ò–í–ê–ï–ú –°–¶–ï–ù–´ (–≤–∫–ª—é—á–∞—è stage.middleware()) >>>
    const config: InstagramScraperBotConfig = {
      telegramBotToken: BOT_TOKEN,
      // –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω—É–∂–Ω–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, apifyClientToken, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      // apifyClientToken: process.env.APIFY_CLIENT_TOKEN,
    };

    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥–∞–ø—Ç–µ—Ä–∞ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞...");
    await storageAdapter.initialize();
    console.log("–ê–¥–∞–ø—Ç–µ—Ä —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.");

    // –ü–µ—Ä–µ–¥–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –≤ —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ (–∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–∏—Ç stage)
    setupInstagramScraperBot(bot, storageAdapter, config);
    console.log("–ú–æ–¥—É–ª—å –±–æ—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–≤–∫–ª—é—á–∞—è —Å—Ü–µ–Ω—ã).");

    // <<< –ü–û–¢–û–ú –†–ï–ì–ò–°–¢–†–ò–†–£–ï–ú MIDDLEWARE –ü–†–û–í–ï–†–ö–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø >>>
    bot.use(ensureUserMiddleware);

    // <<< –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start >>>
    bot.start(async (ctx) => {
      const username =
        ctx.session?.user?.username ||
        ctx.from?.first_name ||
        "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
      const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç, ${username}! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?`;
      // –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
      const mainMenuKeyboard = Markup.keyboard([
        ["üìä –ü—Ä–æ–µ–∫—Ç—ã", "üîç –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç—ã"],
        ["#Ô∏è‚É£ –•—ç—à—Ç–µ–≥–∏", "üé¨ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∞–ø–∏–Ω–≥"],
        ["üì± –†–µ–∑—É–ª—å—Ç–∞—Ç—ã", "‚ÑπÔ∏è –ü–æ–º–æ—â—å"],
      ]).resize(); // –î–µ–ª–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–æ–º–ø–∞–∫—Ç–Ω–µ–µ

      await ctx.reply(welcomeMessage, mainMenuKeyboard);
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ Telegraf
    bot.catch((err: any, ctx: ScraperBotContext) => {
      console.error(`–û—à–∏–±–∫–∞ Telegraf –¥–ª—è ${ctx.updateType}`, err);
      ctx.reply("–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ.").catch(e => console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ", e));
    });

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π middleware –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    bot.use(async (ctx, next) => {
      // –î–æ–±–∞–≤–ª—è–µ–º ctx.scene.session –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç (–≤–∞–∂–Ω–æ –¥–ª—è –∫–æ–º–∞–Ω–¥ –≤–Ω–µ —Å—Ü–µ–Ω)
      // console.log("[DEBUG] Global middleware: –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ ctx.update", JSON.stringify(ctx.update, null, 2));
      // console.log("[DEBUG] Global middleware: –¢–µ–∫—É—â–∏–π ctx.scene", JSON.stringify(ctx.scene, null, 2));
      // console.log("[DEBUG] Global middleware: –ù–∞–ª–∏—á–∏–µ ctx.session", !!ctx.session);
      // console.log("[DEBUG] Global middleware: –ù–∞–ª–∏—á–∏–µ ctx.scene?.session", !!ctx.scene?.session);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ctx.session –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º, –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
      // –≠—Ç–æ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã ctx.session –≤—Å–µ–≥–¥–∞ –±—ã–ª–æ –¥–æ—Å—Ç—É–ø–Ω–æ,
      // –¥–∞–∂–µ –¥–ª—è –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤—Ö–æ–¥—è—Ç –≤ —Å—Ü–µ–Ω—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä /start, /help)
      if (!ctx.session) {
        console.log("[DEBUG] Global middleware: ctx.session –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—ã–º –æ–±—ä–µ–∫—Ç–æ–º");
        ctx.session = {}; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      }

      // –Ø–≤–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –∫–æ–º–∞–Ω–¥, –Ω–µ –≤—Ö–æ–¥—è—â–∏—Ö –≤ —Å—Ü–µ–Ω—ã.
      // Telegraf-session-local –¥–æ–ª–∂–µ–Ω –¥–µ–ª–∞—Ç—å —ç—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π.
      // if (!ctx.scene.session) { // –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å –∏–ª–∏ —É—Ç–æ—á–Ω—è–µ–º –ª–æ–≥–∏–∫—É, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      // console.log(
      //   "[DEBUG] Global middleware: ctx.scene.session –≤—Å–µ –µ—â–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–æ–∫, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–µ–º."
      // );
      // (ctx.scene as any).session = {};
      // }

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ —á–∞—Ç–µ
      // ... existing code ...

      return next();
    });

    console.log("–ó–∞–ø—É—Å–∫ Telegraf...");
    await bot.launch();
    console.log("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!");

    // –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º graceful stop
    const stopBot = async (signal: string) => {
      console.log(`–ü–æ–ª—É—á–µ–Ω ${signal}. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...`);
      bot.stop(signal);
      if (storageAdapter) {
        try {
          await storageAdapter.close();
          console.log("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ.");
        } catch (closeError) {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î:", closeError);
        }
      }
      console.log("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.");
      process.exit(0);
    };

    process.once("SIGINT", () => stopBot("SIGINT"));
    process.once("SIGTERM", () => stopBot("SIGTERM"));
  } catch (error) {
    console.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–ª–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞:", error);
    if (storageAdapter) {
      try {
        await storageAdapter.close();
        console.log("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏.");
      } catch (closeError) {
        console.error(
          "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω–æ–π –æ—à–∏–±–∫–∏:",
          closeError
        );
      }
    }
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
startBot();
