/**
 * –î–µ–º–æ-—Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è AI Text-to-SQL —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤ –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ Telegram –±–æ—Ç–∞
 */

import { drizzle } from "drizzle-orm/postgres-js";
import postgres from "postgres";
import * as schema from "../db/schema";
import { AITextToSQLService } from "./services/ai-text-to-sql.service";

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ URL —á—Ç–æ –∏ –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
const DATABASE_URL = process.env.DATABASE_URL || "postgresql://neondb_owner:npg_z6BWURv1GHbu@ep-dry-base-a1uf8xwo-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require";

async function runDemo() {
  console.log("ü§ñ –î–µ–º–æ AI Text-to-SQL –¥–ª—è Padle World Club");
  console.log("=" .repeat(50));

  // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
  const client = postgres(DATABASE_URL);
  const db = drizzle(client, { schema });

  // –°–æ–∑–¥–∞–µ–º AI —Å–µ—Ä–≤–∏—Å
  const aiService = new AITextToSQLService(db);

  // –ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
  const testQueries = [
    "–ü–æ–∫–∞–∂–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
    "–°–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –ø–ª–æ—â–∞–¥–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ?",
    "–ù–∞–π–¥–∏ —Ç–æ–ø 5 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É",
    "–ü–æ–∫–∞–∂–∏ –≤—Å–µ –∫–æ—Ä—Ç—ã —Ç–∏–ø–∞ paddle",
    "–°–∫–æ–ª—å–∫–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è?",
    "–ù–∞–π–¥–∏ –≤—Å–µ —Ç—É—Ä–Ω–∏—Ä—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'upcoming'",
    "–ü–æ–∫–∞–∂–∏ –∏–≥—Ä–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞",
    "–ö–∞–∫–∏–µ –ø–ª–æ—â–∞–¥–∫–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ú–æ—Å–∫–≤–µ?",
    "–ü–æ–∫–∞–∂–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –ø–ª–∞—Ç–µ–∂–µ–π",
    "–ù–∞–π–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –≤—ã—à–µ 1800"
  ];

  console.log(`\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º ${testQueries.length} –∑–∞–ø—Ä–æ—Å–æ–≤...\n`);

  for (let i = 0; i < testQueries.length; i++) {
    const query = testQueries[i];
    console.log(`\n${i + 1}. üìù –ó–∞–ø—Ä–æ—Å: "${query}"`);
    console.log("-".repeat(40));

    try {
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ SQL —Å –ø–æ–º–æ—â—å—é AI
      const sqlResult = await aiService.convertToSQL(query);

      if (!sqlResult.success) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ AI: ${sqlResult.error}`);
        continue;
      }

      console.log(`üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å AI: ${Math.round((sqlResult.confidence || 0) * 100)}%`);
      console.log(`üîß SQL: ${sqlResult.sql}`);
      console.log(`üí° –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: ${sqlResult.explanation}`);

      // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
      const queryResult = await aiService.executeQuery(sqlResult.sql!);

      if (!queryResult.success) {
        console.log(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${queryResult.error}`);
        continue;
      }

      console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${queryResult.rowCount} –∑–∞–ø–∏—Å–µ–π –∑–∞ ${queryResult.executionTime}ms`);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–ø–∏—Å–µ–π
      if (queryResult.data && queryResult.data.length > 0) {
        console.log("üìä –ü–µ—Ä–≤—ã–µ –∑–∞–ø–∏—Å–∏:");
        const preview = queryResult.data.slice(0, 3);
        preview.forEach((record, idx) => {
          const fields = Object.entries(record)
            .slice(0, 3)
            .map(([key, value]) => `${key}: ${value}`)
            .join(", ");
          console.log(`   ${idx + 1}. ${fields}`);
        });

        if (queryResult.data.length > 3) {
          console.log(`   ... –∏ –µ—â–µ ${queryResult.data.length - 3} –∑–∞–ø–∏—Å–µ–π`);
        }
      }

    } catch (error) {
      console.log(`üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${error instanceof Error ? error.message : String(error)}`);
    }
  }

  console.log("\n" + "=".repeat(50));
  console.log("üéâ –î–µ–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!");
  console.log("\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞:");
  console.log("1. –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –æ—Ç @BotFather –≤ Telegram");
  console.log("2. –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á OpenAI");
  console.log("3. –û–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª —Å —Ç–æ–∫–µ–Ω–∞–º–∏");
  console.log("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run bot:dev");

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
  await client.end();
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–º–æ
if (require.main === module) {
  runDemo().catch((error) => {
    console.error("üí• –û—à–∏–±–∫–∞ –¥–µ–º–æ:", error);
    process.exit(1);
  });
}
