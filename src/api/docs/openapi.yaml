openapi: 3.0.3
info:
  title: Padle World Club API
  description: |
    Comprehensive REST API for Padle World Club management system.

    This API provides endpoints for managing:
    - **Users** - User registration, authentication, and profile management
    - **Venues** - Padel club venues and facilities
    - **Courts** - Individual courts within venues
    - **Bookings** - Court reservations and booking management
    - **Payments** - Payment processing and financial transactions

    ## Authentication
    Most endpoints require authentication using JWT Bearer tokens.

    ## Response Format
    All responses follow a consistent format:
    ```json
    {
      "success": true,
      "data": {...},
      "message": "Operation completed successfully",
      "timestamp": "2024-01-26T10:00:00Z",
      "path": "/api/endpoint",
      "method": "GET"
    }
    ```

    ## Error Handling
    Errors are returned with appropriate HTTP status codes and detailed messages:
    ```json
    {
      "success": false,
      "message": "Error description",
      "error": "Detailed error information",
      "timestamp": "2024-01-26T10:00:00Z",
      "path": "/api/endpoint",
      "method": "POST"
    }
    ```

  version: 1.0.0
  contact:
    name: Padle World Club API Support
    email: support@padleworldclub.com
    url: https://github.com/gHashTag/padle-world-club
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.padleworldclub.com
    description: Production server
  - url: https://staging-api.padleworldclub.com
    description: Staging server

tags:
  - name: Health
    description: Server health and status endpoints
  - name: API Info
    description: API information and metadata
  - name: Authentication
    description: User authentication and authorization
  - name: Users
    description: User management operations
  - name: Venues
    description: Venue management operations
  - name: Courts
    description: Court management operations
  - name: Bookings
    description: Booking management operations
  - name: Payments
    description: Payment processing operations

paths:
  # Health and Info endpoints
  /health:
    $ref: './health.yaml#/paths/~1health'

  /api:
    $ref: './api-info.yaml#/paths/~1api'

  # Authentication endpoints
  /api/auth/register:
    $ref: './auth.yaml#/paths/~1api~1auth~1register'

  /api/auth/login:
    $ref: './auth.yaml#/paths/~1api~1auth~1login'

  /api/auth/logout:
    $ref: './auth.yaml#/paths/~1api~1auth~1logout'

  /api/auth/me:
    $ref: './auth.yaml#/paths/~1api~1auth~1me'

  /api/auth/change-password:
    $ref: './auth.yaml#/paths/~1api~1auth~1change-password'

  # Users endpoints
  /api/users:
    $ref: './users.yaml#/paths/~1api~1users'

  /api/users/{id}:
    $ref: './users.yaml#/paths/~1api~1users~1{id}'

  # Venues endpoints
  /api/venues:
    $ref: './venues.yaml#/paths/~1api~1venues'

  /api/venues/{id}:
    $ref: './venues.yaml#/paths/~1api~1venues~1{id}'

  /api/venues/search/location:
    $ref: './venues.yaml#/paths/~1api~1venues~1search~1location'

  /api/venues/{id}/status:
    $ref: './venues.yaml#/paths/~1api~1venues~1{id}~1status'

  # Courts endpoints
  /api/courts:
    $ref: './courts.yaml#/paths/~1api~1courts'

  /api/courts/{id}:
    $ref: './courts.yaml#/paths/~1api~1courts~1{id}'

  /api/courts/venue/{venueId}:
    $ref: './courts.yaml#/paths/~1api~1courts~1venue~1{venueId}'

  /api/courts/{id}/availability:
    $ref: './courts.yaml#/paths/~1api~1courts~1{id}~1availability'

  /api/courts/{id}/stats:
    $ref: './courts.yaml#/paths/~1api~1courts~1{id}~1stats'

  # Bookings endpoints
  /api/bookings:
    $ref: './bookings.yaml#/paths/~1api~1bookings'

  /api/bookings/{id}:
    $ref: './bookings.yaml#/paths/~1api~1bookings~1{id}'

  /api/bookings/{id}/confirm:
    $ref: './bookings.yaml#/paths/~1api~1bookings~1{id}~1confirm'

  /api/bookings/{id}/participants:
    $ref: './bookings.yaml#/paths/~1api~1bookings~1{id}~1participants'

  /api/bookings/{id}/participants/{participantId}:
    $ref: './bookings.yaml#/paths/~1api~1bookings~1{id}~1participants~1{participantId}'

  # Payments endpoints
  /api/payments:
    $ref: './payments.yaml#/paths/~1api~1payments'

  /api/payments/{id}:
    $ref: './payments.yaml#/paths/~1api~1payments~1{id}'

  /api/payments/{id}/refund:
    $ref: './payments.yaml#/paths/~1api~1payments~1{id}~1refund'

  /api/payments/methods:
    $ref: './payments.yaml#/paths/~1api~1payments~1methods'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT Bearer token authentication.

        To authenticate, include the token in the Authorization header:
        ```
        Authorization: Bearer <your-jwt-token>
        ```

        Tokens are obtained through the `/api/auth/login` endpoint.

  # Common schemas used across multiple endpoints
  schemas:
    # Common response schemas
    $ref: './schemas/common.yaml#/components/schemas'

  # Common response templates
  responses:
    $ref: './schemas/responses.yaml#/components/responses'

  # Common parameters
  parameters:
    $ref: './schemas/parameters.yaml#/components/parameters'

# Security applied globally (can be overridden per endpoint)
security:
  - bearerAuth: []

# External documentation
externalDocs:
  description: Find more info about Padle World Club API
  url: https://github.com/gHashTag/padle-world-club/blob/main/README.md
