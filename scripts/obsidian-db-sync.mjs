#!/usr/bin/env node

/**
 * üïâÔ∏è Obsidian Database Sync
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É PostgreSQL –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∏ Obsidian
 *
 * –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
 * - –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î –≤ Obsidian markdown —Ç–∞–±–ª–∏—Ü—ã
 * - –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö DataEdit —Ç–∞–±–ª–∏—Ü
 * - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Obsidian —Ñ–∞–π–ª–∞—Ö
 * - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –æ–±—Ä–∞—Ç–Ω–æ –≤ –ë–î
 */

import { config } from "dotenv";
import { Pool } from "pg";
import fs from "fs/promises";
import path from "path";
import chokidar from "chokidar";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config();

const DB_CONFIG = {
  connectionString: process.env.DATABASE_URL,
  ssl:
    process.env.NODE_ENV === "production"
      ? { rejectUnauthorized: false }
      : false,
};

const OBSIDIAN_VAULT_PATH =
  process.env.OBSIDIAN_VAULT_PATH ||
  "/Users/playra/padle-world-club/oxygen-world";
const DATABASE_FOLDER = path.join(OBSIDIAN_VAULT_PATH, "Database");
const TEMPLATES_FOLDER = path.join(OBSIDIAN_VAULT_PATH, "Templates");
const GRAPHS_FOLDER = path.join(OBSIDIAN_VAULT_PATH, "Graphs");

class ObsidianDBSync {
  constructor() {
    this.pool = new Pool(DB_CONFIG);
    this.isWatching = false;

    // üóÑÔ∏è –ü–æ–ª–Ω–∞—è –∫–∞—Ä—Ç–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –ë–î –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    this.tableConfig = {
      // üè¢ Business Layer - –û—Å–Ω–æ–≤–Ω—ã–µ –±–∏–∑–Ω–µ—Å-—Å—É—â–Ω–æ—Å—Ç–∏
      user: {
        icon: "üë•",
        color: "blue",
        relationships: [
          "user_account_link",
          "booking",
          "payment",
          "game_session",
          "tournament_participant",
        ],
      },
      user_account_link: {
        icon: "üîó",
        color: "blue",
        relationships: ["user"],
      },
      venue: {
        icon: "üèüÔ∏è",
        color: "green",
        relationships: ["court", "class_schedule", "tournament"],
      },
      court: {
        icon: "üéæ",
        color: "green",
        relationships: ["venue", "booking", "game_session"],
      },
      booking: {
        icon: "üìÖ",
        color: "blue",
        relationships: ["user", "court", "booking_participant", "payment"],
      },
      booking_participant: {
        icon: "üë§",
        color: "blue",
        relationships: ["booking", "user"],
      },

      // üí∞ Financial Layer - –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
      payment: {
        icon: "üí∞",
        color: "green",
        relationships: ["user", "booking", "order"],
      },
      order: {
        icon: "üõí",
        color: "green",
        relationships: ["user", "order_item", "payment"],
      },
      order_item: {
        icon: "üì¶",
        color: "green",
        relationships: ["order", "product"],
      },
      product: {
        icon: "üéØ",
        color: "green",
        relationships: ["product_category", "order_item", "stock_transaction"],
      },
      product_category: {
        icon: "üìÇ",
        color: "green",
        relationships: ["product"],
      },
      stock_transaction: {
        icon: "üìä",
        color: "green",
        relationships: ["product"],
      },
      bonus_transaction: {
        icon: "üéÅ",
        color: "green",
        relationships: ["user"],
      },

      // üéì Education Layer - –û–±—É—á–µ–Ω–∏–µ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
      class_definition: {
        icon: "üìö",
        color: "orange",
        relationships: ["class_schedule", "training_package_definition"],
      },
      class_schedule: {
        icon: "üìÖ",
        color: "orange",
        relationships: ["class_definition", "venue", "class_participant"],
      },
      class_participant: {
        icon: "üéì",
        color: "orange",
        relationships: ["class_schedule", "user"],
      },
      training_package_definition: {
        icon: "üìã",
        color: "orange",
        relationships: ["class_definition", "user_training_package"],
      },
      user_training_package: {
        icon: "üéØ",
        color: "orange",
        relationships: ["user", "training_package_definition"],
      },

      // üéÆ Gaming Layer - –ò–≥—Ä–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏ –∏ —Ç—É—Ä–Ω–∏—Ä—ã
      game_session: {
        icon: "üéÆ",
        color: "purple",
        relationships: ["court", "game_player", "rating_change"],
      },
      game_player: {
        icon: "üèì",
        color: "purple",
        relationships: ["game_session", "user", "rating_change"],
      },
      rating_change: {
        icon: "üìà",
        color: "purple",
        relationships: ["user", "game_session", "game_player"],
      },
      tournament: {
        icon: "üèÜ",
        color: "purple",
        relationships: [
          "venue",
          "tournament_participant",
          "tournament_team",
          "tournament_match",
        ],
      },
      tournament_participant: {
        icon: "ü•á",
        color: "purple",
        relationships: ["tournament", "user", "tournament_team"],
      },
      tournament_team: {
        icon: "üë•",
        color: "purple",
        relationships: [
          "tournament",
          "tournament_participant",
          "tournament_match",
        ],
      },
      tournament_match: {
        icon: "‚öîÔ∏è",
        color: "purple",
        relationships: ["tournament", "tournament_team"],
      },

      // ü§ñ AI/Analytics Layer - –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
      ai_suggestion_log: {
        icon: "ü§ñ",
        color: "yellow",
        relationships: ["user"],
      },
      feedback: {
        icon: "üí≠",
        color: "yellow",
        relationships: ["user"],
      },

      // ‚öôÔ∏è System Layer - –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
      task: {
        icon: "üìã",
        color: "red",
        relationships: ["user", "venue"],
      },
      notification: {
        icon: "üîî",
        color: "red",
        relationships: ["user"],
      },
      external_system_mapping: {
        icon: "üîÑ",
        color: "red",
        relationships: [],
      },
    };
  }

  /**
   * üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
   */

  async exportAISuggestionLogs() {
    console.log("üîÑ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É—é AI Suggestion Logs...");

    const query = `
      SELECT 
        id,
        suggestion_type,
        user_id,
        input_data,
        suggestion_data,
        confidence_score,
        was_accepted,
        user_feedback,
        execution_time_ms,
        model_version,
        context_data,
        created_at,
        updated_at
      FROM ai_suggestion_log 
      ORDER BY created_at DESC 
      LIMIT 100
    `;

    try {
      const result = await this.pool.query(query);
      const markdownContent = this.generateDataEditTable(result.rows);

      const filePath = path.join(DATABASE_FOLDER, "AI-Suggestion-Logs.md");
      await this.ensureDirectoryExists(path.dirname(filePath));
      await fs.writeFile(filePath, markdownContent, "utf8");

      console.log(
        `‚úÖ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${result.rows.length} –∑–∞–ø–∏—Å–µ–π –≤ ${filePath}`
      );
      return result.rows;
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:", error);
      throw error;
    }
  }

  generateDataEditTable(data) {
    const frontmatter = `---
title: AI Suggestion Logs Database
type: database
table: ai_suggestion_log
last_sync: ${new Date().toISOString()}
sync_enabled: true
---

# ü§ñ AI Suggestion Logs Database

> **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞** - –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
> –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è: ${new Date().toLocaleString()}

`;

    // –°–æ–∑–¥–∞–µ–º DataEdit —Ç–∞–±–ª–∏—Ü—É (editable dataview)
    const dataeditQuery = `\`\`\`dataedit
TABLE 
  suggestion_type as "–¢–∏–ø",
  confidence_score as "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å",
  was_accepted as "–ü—Ä–∏–Ω—è—Ç–æ",
  user_feedback as "–û—Ç–∑—ã–≤",
  model_version as "–ú–æ–¥–µ–ª—å",
  created_at as "–°–æ–∑–¥–∞–Ω–æ"
FROM "ai-suggestions"
SORT created_at DESC
LIMIT 50
\`\`\``;

    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –æ–±—ã—á–Ω–∞—è markdown —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    const headers = [
      "ID",
      "–¢–∏–ø",
      "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å",
      "–ü—Ä–∏–Ω—è—Ç–æ",
      "–û—Ç–∑—ã–≤",
      "–ú–æ–¥–µ–ª—å",
      "–°–æ–∑–¥–∞–Ω–æ",
    ];

    const rows = data.map((row) => [
      row.id.substring(0, 8) + "...",
      row.suggestion_type,
      row.confidence_score ? parseFloat(row.confidence_score).toFixed(3) : "-",
      row.was_accepted === null ? "‚ùì" : row.was_accepted ? "‚úÖ" : "‚ùå",
      row.user_feedback ? row.user_feedback.substring(0, 30) + "..." : "-",
      row.model_version || "-",
      new Date(row.created_at).toLocaleDateString(),
    ]);

    const markdownTable = this.createMarkdownTable(headers, rows);

    return `${frontmatter}

## üìä –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¢–∞–±–ª–∏—Ü–∞ (DataEdit)

${dataeditQuery}

## üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö (Read-Only)

${markdownTable}

## üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏

- **–ê–≤—Ç–æ—Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è**: –≤–∫–ª—é—á–µ–Ω–∞
- **–ò–Ω—Ç–µ—Ä–≤–∞–ª**: –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
- **–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ**: –¥–≤—É—Å—Ç–æ—Ä–æ–Ω–Ω—è—è
- **API Endpoint**: \`/api/ai-suggestion-logs\`

## üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é

1. **–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ DataEdit**: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∞–±–ª–∏—Ü—É –≤—ã—à–µ –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
2. **–ü–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è**:
   - \`was_accepted\`: true/false/null
   - \`user_feedback\`: —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–∑—ã–≤
3. **–ò–∑–º–µ–Ω–µ–Ω–∏—è**: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ë–î

---
*–°–æ–∑–¥–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–º obsidian-db-sync*
`;
  }

  createMarkdownTable(headers, rows) {
    const headerRow = "| " + headers.join(" | ") + " |";
    const separatorRow = "| " + headers.map(() => "---").join(" | ") + " |";
    const dataRows = rows.map((row) => "| " + row.join(" | ") + " |");

    return [headerRow, separatorRow, ...dataRows].join("\n");
  }

  /**
   * üé¨ –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –≤–∏–¥–æ–≤ —Ç–∞–±–ª–∏—Ü
   */

  async createTemplates() {
    console.log("üìù –°–æ–∑–¥–∞—é —à–∞–±–ª–æ–Ω—ã –¥–ª—è Obsidian...");

    const templates = {
      "AI-Suggestion-DataEdit.md": this.getAISuggestionTemplate(),
      "Database-Table-Template.md": this.getDatabaseTableTemplate(),
      "Live-Dashboard.md": this.getLiveDashboardTemplate(),
    };

    const templateDir = TEMPLATES_FOLDER;
    await this.ensureDirectoryExists(templateDir);

    for (const [filename, content] of Object.entries(templates)) {
      const filePath = path.join(templateDir, filename);
      await fs.writeFile(filePath, content, "utf8");
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —à–∞–±–ª–æ–Ω: ${filename}`);
    }
  }

  getAISuggestionTemplate() {
    return `---
title: "{{title}}"
type: database
table: ai_suggestion_log
sync_enabled: true
auto_refresh: 300000
---

# ü§ñ {{title}}

\`\`\`dataedit
TABLE 
  id as "ID",
  suggestion_type as "–¢–∏–ø –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
  confidence_score as "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å (%)",
  was_accepted as "–ü—Ä–∏–Ω—è—Ç–æ",
  user_feedback as "–û—Ç–∑—ã–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
  model_version as "–í–µ—Ä—Å–∏—è –º–æ–¥–µ–ª–∏",
  created_at as "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"
FROM "ai_suggestion_log"
WHERE suggestion_type = "{{filter_type}}"
SORT created_at DESC
LIMIT 50
\`\`\`

## üéØ –î–µ–π—Å—Ç–≤–∏—è

- [[–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ]]
- [[–ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ AI]]
- [[–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö]]

## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

\`\`\`dataview
TABLE
  length(filter(pages.ai_suggestions, (x) => x.was_accepted = true)) as "–ü—Ä–∏–Ω—è—Ç–æ",
  length(filter(pages.ai_suggestions, (x) => x.was_accepted = false)) as "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ",
  length(filter(pages.ai_suggestions, (x) => x.was_accepted = null)) as "–û–∂–∏–¥–∞–µ—Ç"
WHERE type = "database"
\`\`\`
`;
  }

  getDatabaseTableTemplate() {
    return `---
title: "Database: {{table_name}}"
type: database
table: "{{table_name}}"
sync_enabled: true
last_sync: "{{current_date}}"
---

# üóÑÔ∏è {{table_name}}

\`\`\`dataedit
{{dataview_query}}
\`\`\`

## üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è

- **–°—Ç–∞—Ç—É—Å**: {{sync_status}}
- **–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è**: {{last_sync}}
- **–ó–∞–ø–∏—Å–µ–π**: {{record_count}}

## üìù –ó–∞–º–µ—Ç–∫–∏

{{notes}}
`;
  }

  getLiveDashboardTemplate() {
    return `---
title: Live Database Dashboard
type: dashboard
auto_refresh: 60000
---

# üìä Live Database Dashboard

## ü§ñ AI Suggestion Logs

\`\`\`dataedit
TABLE 
  suggestion_type as "–¢–∏–ø",
  count(*) as "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ",
  avg(confidence_score) as "–°—Ä–µ–¥–Ω—è—è —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å",
  sum(case when was_accepted = true then 1 else 0 end) as "–ü—Ä–∏–Ω—è—Ç–æ"
FROM "ai_suggestion_log"
GROUP BY suggestion_type
ORDER BY count(*) DESC
\`\`\`

## üë• –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏

\`\`\`dataedit
TABLE TOP 10
  name as "–ò–º—è",
  email as "Email", 
  last_active_at as "–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
FROM "users"
WHERE last_active_at > NOW() - INTERVAL '7 days'
SORT last_active_at DESC
\`\`\`

## üéÆ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∏–≥—Ä–æ–≤—ã–µ —Å–µ—Å—Å–∏–∏

\`\`\`dataedit
TABLE TOP 15
  court_name as "–ö–æ—Ä—Ç",
  start_time as "–ù–∞—á–∞–ª–æ",
  status as "–°—Ç–∞—Ç—É—Å",
  current_players as "–ò–≥—Ä–æ–∫–∏"
FROM "game_sessions"
SORT start_time DESC
\`\`\`

---
*–û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É*
`;
  }

  /**
   * üîÑ –°–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
   */

  async startWatching() {
    if (this.isWatching) {
      console.log("‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω");
      return;
    }

    console.log("üëÄ –ó–∞–ø—É—Å–∫–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ Obsidian...");

    const watchPath = path.join(DATABASE_FOLDER, "**/*.md");

    const watcher = chokidar.watch(watchPath, {
      ignored: /(^|[\/\\])\../, // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∫—Ä—ã—Ç—ã–µ —Ñ–∞–π–ª—ã
      persistent: true,
      ignoreInitial: true,
    });

    watcher
      .on("change", (filePath) => this.handleFileChange(filePath))
      .on("add", (filePath) => this.handleFileAdd(filePath))
      .on("unlink", (filePath) => this.handleFileDelete(filePath))
      .on("error", (error) => console.error("‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:", error));

    this.isWatching = true;
    console.log("‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω");
  }

  async handleFileChange(filePath) {
    console.log(`üìù –ò–∑–º–µ–Ω–µ–Ω —Ñ–∞–π–ª: ${filePath}`);

    try {
      const content = await fs.readFile(filePath, "utf8");
      const metadata = this.extractMetadata(content);

      if (metadata && metadata.sync_enabled && metadata.table) {
        await this.syncFileToDatabase(filePath, content, metadata);
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ ${filePath}:`, error);
    }
  }

  async handleFileAdd(filePath) {
    console.log(`‚ûï –î–æ–±–∞–≤–ª–µ–Ω —Ñ–∞–π–ª: ${filePath}`);
  }

  async handleFileDelete(filePath) {
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: ${filePath}`);
  }

  extractMetadata(content) {
    const frontmatterMatch = content.match(/^---\n([\s\S]*?)\n---/);
    if (!frontmatterMatch) return null;

    const frontmatter = frontmatterMatch[1];
    const metadata = {};

    frontmatter.split("\n").forEach((line) => {
      const [key, ...valueParts] = line.split(":");
      if (key && valueParts.length > 0) {
        const value = valueParts.join(":").trim();
        metadata[key.trim()] = value.replace(/^["']|["']$/g, ""); // —É–±–∏—Ä–∞–µ–º –∫–∞–≤—ã—á–∫–∏
      }
    });

    return metadata;
  }

  async syncFileToDatabase(filePath, content, metadata) {
    console.log(`üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ${filePath} —Å —Ç–∞–±–ª–∏—Ü–µ–π ${metadata.table}...`);

    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–∞—Ä—Å–∏–Ω–≥ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ DataEdit —Ç–∞–±–ª–∏—Ü–∞—Ö
    // –∏ –æ—Ç–ø—Ä–∞–≤–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î —á–µ—Ä–µ–∑ API

    // –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏–∫–∏:
    // 1. –ü–∞—Ä—Å–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ DataEdit –±–ª–æ–∫–∞—Ö
    // 2. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–∞–∫–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å
    // 3. –û—Ç–ø—Ä–∞–≤–∏—Ç—å PATCH –∑–∞–ø—Ä–æ—Å—ã –∫ –Ω–∞—à–µ–º—É API

    console.log("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –ë–î (TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å)");
  }

  /**
   * üõ†Ô∏è –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
   */

  async ensureDirectoryExists(dirPath) {
    try {
      await fs.access(dirPath);
    } catch {
      await fs.mkdir(dirPath, { recursive: true });
    }
  }

  async testConnection() {
    try {
      const result = await this.pool.query("SELECT NOW()");
      console.log("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ:", result.rows[0].now);
      return true;
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:", error);
      return false;
    }
  }

  async close() {
    await this.pool.end();
    console.log("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ");
  }

  /**
   * üîÑ –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –ë–î
   */
  async exportAllTables() {
    console.log("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –ë–î...");

    // –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏
    await this.ensureDirectoryExists(DATABASE_FOLDER);
    await this.ensureDirectoryExists(GRAPHS_FOLDER);

    const results = {};

    for (const [tableName, config] of Object.entries(this.tableConfig)) {
      try {
        console.log(`üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–∞–±–ª–∏—Ü—ã: ${config.icon} ${tableName}`);

        // –ü–æ–ª—É—á–∞–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü—ã
        const schema = await this.getTableSchema(tableName);

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        const data = await this.getTableData(tableName);

        // –°–æ–∑–¥–∞–µ–º markdown —Ñ–∞–π–ª —Å –≥—Ä–∞—Ñ–æ–≤—ã–º–∏ —Å–≤—è–∑—è–º–∏
        const markdownContent = this.generateTableMarkdown(
          tableName,
          config,
          schema,
          data
        );

        const filePath = path.join(
          DATABASE_FOLDER,
          `${config.icon} ${tableName}.md`
        );
        await fs.writeFile(filePath, markdownContent, "utf8");

        results[tableName] = {
          recordCount: data.length,
          filePath: filePath,
          config: config,
        };

        console.log(`‚úÖ ${tableName}: ${data.length} –∑–∞–ø–∏—Å–µ–π —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã ${tableName}:`, error);
        results[tableName] = { error: error.message };
      }
    }

    // –°–æ–∑–¥–∞–µ–º –≥—Ä–∞—Ñ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏
    await this.createDatabaseGraph(results);

    // –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥
    await this.createMasterDashboard(results);

    console.log("üéä –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    return results;
  }

  /**
   * üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ö–µ–º—ã —Ç–∞–±–ª–∏—Ü—ã
   */
  async getTableSchema(tableName) {
    const query = `
      SELECT 
        column_name,
        data_type,
        is_nullable,
        column_default,
        character_maximum_length
      FROM information_schema.columns 
      WHERE table_name = $1 
      ORDER BY ordinal_position
    `;

    try {
      const result = await this.pool.query(query, [tableName]);
      return result.rows;
    } catch (error) {
      console.warn(
        `‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ö–µ–º—É –¥–ª—è ${tableName}:`,
        error.message
      );
      return [];
    }
  }

  /**
   * üóÑÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü—ã
   */
  async getTableData(tableName, limit = 100) {
    try {
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
      const checkQuery = `
        SELECT EXISTS (
          SELECT FROM information_schema.tables 
          WHERE table_name = $1
        )
      `;

      const checkResult = await this.pool.query(checkQuery, [tableName]);

      if (!checkResult.rows[0].exists) {
        console.warn(`‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ ${tableName} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
        return [];
      }

      const query = `SELECT * FROM "${tableName}" LIMIT $1`;
      const result = await this.pool.query(query, [limit]);
      return result.rows;
    } catch (error) {
      console.warn(
        `‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ ${tableName}:`,
        error.message
      );
      return [];
    }
  }

  /**
   * üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è markdown —Å –≥—Ä–∞—Ñ–æ–≤—ã–º–∏ —Å–≤—è–∑—è–º–∏
   */
  generateTableMarkdown(tableName, config, schema, data) {
    const { icon, color, relationships } = config;

    const frontmatter = `---
title: "${icon} ${tableName} Database"
type: database-table
table: "${tableName}"
color: "${color}"
icon: "${icon}"
relationships: [${relationships.map((r) => `"${r}"`).join(", ")}]
last_sync: "${new Date().toISOString()}"
record_count: ${data.length}
tags: [database, ${tableName}, ${color}-layer]
---

`;

    const header = `# ${icon} **${tableName.toUpperCase()} DATABASE**

> **üîó –ì—Ä–∞—Ñ–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞** —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å–≤—è–∑—è–º–∏  
> –ó–∞–ø–∏—Å–µ–π: **${data.length}** | –û–±–Ω–æ–≤–ª–µ–Ω–æ: \`= date(now)\`

`;

    // –ì—Ä–∞—Ñ —Å–≤—è–∑–µ–π
    const graphSection = `## üåê **–°–í–Ø–ó–ò –í –ì–†–ê–§–ï**

### üîó –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:
${relationships
  .map((rel) => {
    const relConfig = this.tableConfig[rel];
    return relConfig
      ? `- [[${relConfig.icon} ${rel}|${relConfig.icon} ${rel}]] (${relConfig.color} layer)`
      : `- ${rel} (external)`;
  })
  .join("\n")}

### üéØ –ì—Ä–∞—Ñ-–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è:
\`\`\`mermaid
graph TB
    %% Business Layer (Blue)
    User[üë• user]
    UserLink[üîó user_account_link]
    Booking[üìÖ booking]
    BookingPart[üë§ booking_participant]
    
    %% Venue & Courts (Green)
    Venue[üèüÔ∏è venue]
    Court[üéæ court]
    
    %% Financial Layer (Green)
    Payment[üí∞ payment]
    Order[üõí order]
    OrderItem[üì¶ order_item]
    Product[üéØ product]
    ProductCat[üìÇ product_category]
    StockTrans[üìä stock_transaction]
    BonusTrans[üéÅ bonus_transaction]
    
    %% Education Layer (Orange)
    ClassDef[üìö class_definition]
    ClassSched[üìÖ class_schedule]
    ClassPart[üéì class_participant]
    TrainPkg[üìã training_package_definition]
    UserTrainPkg[üéØ user_training_package]
    
    %% Gaming Layer (Purple)
    GameSession[üéÆ game_session]
    GamePlayer[üèì game_player]
    RatingChange[üìà rating_change]
    Tournament[üèÜ tournament]
    TournPart[ü•á tournament_participant]
    TournTeam[üë• tournament_team]
    TournMatch[‚öîÔ∏è tournament_match]
    
    %% AI/Analytics Layer (Yellow)
    AISuggestion[ü§ñ ai_suggestion_log]
    Feedback[üí≠ feedback]
    
    %% System Layer (Red)
    Task[üìã task]
    Notification[üîî notification]
    ExtMapping[üîÑ external_system_mapping]
    
    %% Core Relationships
    User --> UserLink
    User --> Booking
    User --> Payment
    User --> GameSession
    User --> TournPart
    User --> AISuggestion
    User --> Feedback
    User --> Task
    User --> Notification
    User --> BonusTrans
    
    %% Venue & Court Relationships
    Venue --> Court
    Venue --> ClassSched
    Venue --> Tournament
    Court --> Booking
    Court --> GameSession
    
    %% Booking Relationships
    Booking --> BookingPart
    Booking --> Payment
    BookingPart --> User
    
    %% Financial Relationships
    Payment --> Order
    Order --> OrderItem
    OrderItem --> Product
    Product --> ProductCat
    Product --> StockTrans
    
    %% Education Relationships
    ClassDef --> ClassSched
    ClassDef --> TrainPkg
    ClassSched --> ClassPart
    ClassPart --> User
    TrainPkg --> UserTrainPkg
    UserTrainPkg --> User
    
    %% Gaming Relationships
    GameSession --> GamePlayer
    GameSession --> RatingChange
    GamePlayer --> User
    GamePlayer --> RatingChange
    Tournament --> TournPart
    Tournament --> TournTeam
    Tournament --> TournMatch
    TournPart --> User
    TournPart --> TournTeam
    TournTeam --> TournMatch
    
    %% Styling
    classDef blueNode fill:#4A90E2,stroke:#333,stroke-width:2px,color:#fff;
    classDef greenNode fill:#7ED321,stroke:#333,stroke-width:2px,color:#fff;
    classDef orangeNode fill:#F5A623,stroke:#333,stroke-width:2px,color:#fff;
    classDef purpleNode fill:#9013FE,stroke:#333,stroke-width:2px,color:#fff;
    classDef yellowNode fill:#F8E71C,stroke:#333,stroke-width:2px,color:#000;
    classDef redNode fill:#D0021B,stroke:#333,stroke-width:2px,color:#fff;
    
    class User,UserLink,Booking,BookingPart blueNode;
    class Venue,Court,Payment,Order,OrderItem,Product,ProductCat,StockTrans,BonusTrans greenNode;
    class ClassDef,ClassSched,ClassPart,TrainPkg,UserTrainPkg orangeNode;
    class GameSession,GamePlayer,RatingChange,Tournament,TournPart,TournTeam,TournMatch purpleNode;
    class AISuggestion,Feedback yellowNode;
    class Task,Notification,ExtMapping redNode;
\`\`\`

`;

    // –°—Ö–µ–º–∞ —Ç–∞–±–ª–∏—Ü—ã
    const schemaSection = `## üèóÔ∏è **–°–•–ï–ú–ê –¢–ê–ë–õ–ò–¶–´**

\`\`\`dataview
TABLE WITHOUT ID
    column_name as "üìã –ü–æ–ª–µ",
    data_type as "üîß –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö", 
    is_nullable as "‚ùì Nullable",
    column_default as "üìå –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é"
FROM "${tableName}-schema"
\`\`\`

| üìã **–ü–æ–ª–µ** | üîß **–¢–∏–ø** | ‚ùì **Nullable** | üìå **–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é** |
|-------------|-------------|-----------------|---------------------|
${schema
  .map(
    (col) =>
      `| ${col.column_name} | ${col.data_type} | ${col.is_nullable} | ${
        col.column_default || "-"
      } |`
  )
  .join("\n")}

`;

    // –î–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã (–ø—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
    const dataSection = `## üìä **–î–ê–ù–ù–´–ï (–ü–æ—Å–ª–µ–¥–Ω–∏–µ ${Math.min(
      data.length,
      10
    )} –∑–∞–ø–∏—Å–µ–π)**

\`\`\`dataview
TABLE 
${schema
  .slice(0, 5)
  .map((col) => `    ${col.column_name} as "${col.column_name}"`)
  .join(",\n")}
FROM "${tableName}"
SORT file.ctime DESC
LIMIT 10
\`\`\`

`;

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const statsSection = `## üìà **–°–¢–ê–¢–ò–°–¢–ò–ö–ê**

- üìä **–í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π**: ${data.length}
- üîó **–°–≤—è–∑–µ–π —Å –¥—Ä—É–≥–∏–º–∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏**: ${relationships.length}
- üèóÔ∏è **–ü–æ–ª–µ–π –≤ —Å—Ö–µ–º–µ**: ${schema.length}
- üé® **–¶–≤–µ—Ç–æ–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è**: ${color}
- ‚è∞ **–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ**: ${new Date().toLocaleString()}

---

## üîÑ **ACTIONS**

- üîÑ [[Sync All Tables]] - –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
- üìä [[Database Overview]] - –û–±–∑–æ—Ä –≤—Å–µ–π –ë–î
- üåê [[Graph View]] - –û—Ç–∫—Ä—ã—Ç—å –≥—Ä–∞—Ñ —Å–≤—è–∑–µ–π
- üìà [[Analytics Dashboard]] - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞

---
*–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–æ obsidian-db-sync*
`;

    return (
      frontmatter +
      header +
      graphSection +
      schemaSection +
      dataSection +
      statsSection
    );
  }

  /**
   * üé® –ü–æ–ª—É—á–µ–Ω–∏–µ hex —Ü–≤–µ—Ç–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
   */
  getColorHex(colorName) {
    const colors = {
      blue: "4A90E2",
      green: "7ED321",
      purple: "9013FE",
      orange: "F5A623",
      yellow: "F8E71C",
      red: "D0021B",
    };
    return colors[colorName] || "666666";
  }

  /**
   * üåê –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä–∞—Ñ–∞ —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏
   */
  async createDatabaseGraph(results) {
    console.log("üåê –°–æ–∑–¥–∞—é –≥—Ä–∞—Ñ —Å–≤—è–∑–µ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...");

    const graphContent = `---
title: "üåê Database Graph Visualization"
type: graph-overview
tags: [database, graph, overview]
---

# üåê **DATABASE RELATIONSHIP GRAPH**

> **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è —Å—Ö–µ–º–∞** –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –∏ –∏—Ö —Å–≤—è–∑–µ–π

## üéØ **–ü–û–õ–ù–ê–Ø –°–•–ï–ú–ê –ë–î**

\`\`\`mermaid
graph TB
    %% Business Layer (Blue)
    User[üë• user]
    UserLink[üîó user_account_link]
    Booking[üìÖ booking]
    BookingPart[üë§ booking_participant]
    
    %% Venue & Courts (Green)
    Venue[üèüÔ∏è venue]
    Court[üéæ court]
    
    %% Financial Layer (Green)
    Payment[üí∞ payment]
    Order[üõí order]
    OrderItem[üì¶ order_item]
    Product[üéØ product]
    ProductCat[üìÇ product_category]
    StockTrans[üìä stock_transaction]
    BonusTrans[üéÅ bonus_transaction]
    
    %% Education Layer (Orange)
    ClassDef[üìö class_definition]
    ClassSched[üìÖ class_schedule]
    ClassPart[üéì class_participant]
    TrainPkg[üìã training_package_definition]
    UserTrainPkg[üéØ user_training_package]
    
    %% Gaming Layer (Purple)
    GameSession[üéÆ game_session]
    GamePlayer[üèì game_player]
    RatingChange[üìà rating_change]
    Tournament[üèÜ tournament]
    TournPart[ü•á tournament_participant]
    TournTeam[üë• tournament_team]
    TournMatch[‚öîÔ∏è tournament_match]
    
    %% AI/Analytics Layer (Yellow)
    AISuggestion[ü§ñ ai_suggestion_log]
    Feedback[üí≠ feedback]
    
    %% System Layer (Red)
    Task[üìã task]
    Notification[üîî notification]
    ExtMapping[üîÑ external_system_mapping]
    
    %% Core Relationships
    User --> UserLink
    User --> Booking
    User --> Payment
    User --> GameSession
    User --> TournPart
    User --> AISuggestion
    User --> Feedback
    User --> Task
    User --> Notification
    User --> BonusTrans
    
    %% Venue & Court Relationships
    Venue --> Court
    Venue --> ClassSched
    Venue --> Tournament
    Court --> Booking
    Court --> GameSession
    
    %% Booking Relationships
    Booking --> BookingPart
    Booking --> Payment
    BookingPart --> User
    
    %% Financial Relationships
    Payment --> Order
    Order --> OrderItem
    OrderItem --> Product
    Product --> ProductCat
    Product --> StockTrans
    
    %% Education Relationships
    ClassDef --> ClassSched
    ClassDef --> TrainPkg
    ClassSched --> ClassPart
    ClassPart --> User
    TrainPkg --> UserTrainPkg
    UserTrainPkg --> User
    
    %% Gaming Relationships
    GameSession --> GamePlayer
    GameSession --> RatingChange
    GamePlayer --> User
    GamePlayer --> RatingChange
    Tournament --> TournPart
    Tournament --> TournTeam
    Tournament --> TournMatch
    TournPart --> User
    TournPart --> TournTeam
    TournTeam --> TournMatch
    
    %% Styling
    classDef blueNode fill:#4A90E2,stroke:#333,stroke-width:2px,color:#fff;
    classDef greenNode fill:#7ED321,stroke:#333,stroke-width:2px,color:#fff;
    classDef orangeNode fill:#F5A623,stroke:#333,stroke-width:2px,color:#fff;
    classDef purpleNode fill:#9013FE,stroke:#333,stroke-width:2px,color:#fff;
    classDef yellowNode fill:#F8E71C,stroke:#333,stroke-width:2px,color:#000;
    classDef redNode fill:#D0021B,stroke:#333,stroke-width:2px,color:#fff;
    
    class User,UserLink,Booking,BookingPart blueNode;
    class Venue,Court,Payment,Order,OrderItem,Product,ProductCat,StockTrans,BonusTrans greenNode;
    class ClassDef,ClassSched,ClassPart,TrainPkg,UserTrainPkg orangeNode;
    class GameSession,GamePlayer,RatingChange,Tournament,TournPart,TournTeam,TournMatch purpleNode;
    class AISuggestion,Feedback yellowNode;
    class Task,Notification,ExtMapping redNode;
\`\`\`

## üìä **–°–õ–û–ò –ê–†–•–ò–¢–ï–ö–¢–£–†–´**

### üîµ **Business Layer**
${Object.entries(results)
  .filter(([name, data]) => this.tableConfig[name]?.color === "blue")
  .map(
    ([name, data]) =>
      `- [[${this.tableConfig[name].icon} ${name}]] (${
        data.recordCount || 0
      } –∑–∞–ø–∏—Å–µ–π)`
  )
  .join("\n")}

### üü¢ **Financial & Infrastructure Layer**  
${Object.entries(results)
  .filter(([name, data]) => this.tableConfig[name]?.color === "green")
  .map(
    ([name, data]) =>
      `- [[${this.tableConfig[name].icon} ${name}]] (${
        data.recordCount || 0
      } –∑–∞–ø–∏—Å–µ–π)`
  )
  .join("\n")}

### üü† **Education Layer**
${Object.entries(results)
  .filter(([name, data]) => this.tableConfig[name]?.color === "orange")
  .map(
    ([name, data]) =>
      `- [[${this.tableConfig[name].icon} ${name}]] (${
        data.recordCount || 0
      } –∑–∞–ø–∏—Å–µ–π)`
  )
  .join("\n")}

### üü£ **Gaming Layer**
${Object.entries(results)
  .filter(([name, data]) => this.tableConfig[name]?.color === "purple")
  .map(
    ([name, data]) =>
      `- [[${this.tableConfig[name].icon} ${name}]] (${
        data.recordCount || 0
      } –∑–∞–ø–∏—Å–µ–π)`
  )
  .join("\n")}

### üü° **AI/Analytics Layer**
${Object.entries(results)
  .filter(([name, data]) => this.tableConfig[name]?.color === "yellow")
  .map(
    ([name, data]) =>
      `- [[${this.tableConfig[name].icon} ${name}]] (${
        data.recordCount || 0
      } –∑–∞–ø–∏—Å–µ–π)`
  )
  .join("\n")}

### üî¥ **System Layer**
${Object.entries(results)
  .filter(([name, data]) => this.tableConfig[name]?.color === "red")
  .map(
    ([name, data]) =>
      `- [[${this.tableConfig[name].icon} ${name}]] (${
        data.recordCount || 0
      } –∑–∞–ø–∏—Å–µ–π)`
  )
  .join("\n")}

## üéØ **NAVIGATION**

- üéØ [[üöÄ Master Dashboard]] - –ì–ª–∞–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥
- üìä [[Database Overview]] - –û–±–∑–æ—Ä –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü  
- üîÑ [[Sync Status]] - –°—Ç–∞—Ç—É—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
- üé® [[Graph Settings]] - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥—Ä–∞—Ñ–∞

---
*–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–æ obsidian-db-sync ${new Date().toLocaleString()}*
`;

    const filePath = path.join(GRAPHS_FOLDER, "üåê Database Graph.md");
    await fs.writeFile(filePath, graphContent, "utf8");

    console.log(`‚úÖ –ì—Ä–∞—Ñ —Å–≤—è–∑–µ–π —Å–æ–∑–¥–∞–Ω: ${filePath}`);
  }

  /**
   * üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –¥–∞—à–±–æ—Ä–¥–∞
   */
  async createMasterDashboard(results) {
    console.log("üöÄ –°–æ–∑–¥–∞—é –≥–ª–∞–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥...");

    const totalTables = Object.keys(results).length;
    const totalRecords = Object.values(results).reduce(
      (sum, table) => sum + (table.recordCount || 0),
      0
    );
    const successfulTables = Object.values(results).filter(
      (table) => !table.error
    ).length;

    const dashboardContent = `---
title: "üöÄ Master Database Dashboard"
type: master-dashboard
auto_refresh: 30000
tags: [dashboard, master, database, overview]
cssclass: master-dashboard
---

# üöÄ **MASTER DATABASE DASHBOARD**

> **üåê –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö**  
> –û–±–Ω–æ–≤–ª–µ–Ω–æ: \`= date(now)\` | –¢–∞–±–ª–∏—Ü: **${totalTables}** | –ó–∞–ø–∏—Å–µ–π: **${totalRecords}**

---

## üìä **–û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê**

| üéØ **–ú–µ—Ç—Ä–∏–∫–∞** | üìà **–ó–Ω–∞—á–µ–Ω–∏–µ** | üé® **–°—Ç–∞—Ç—É—Å** |
|----------------|-----------------|----------------|
| üóÑÔ∏è –í—Å–µ–≥–æ —Ç–∞–±–ª–∏—Ü | **${totalTables}** | ${
      successfulTables === totalTables
        ? "üü¢ –í–°–ï –°–ò–ù–•–†–û–ù–ò–ó–ò–†–û–í–ê–ù–´"
        : "üü° –ß–ê–°–¢–ò–ß–ù–û"
    } |
| üìä –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π | **${totalRecords.toLocaleString()}** | üî• –ê–ö–¢–£–ê–õ–¨–ù–û |
| ‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ | **${successfulTables}/${totalTables}** | ${
      successfulTables === totalTables ? "üéØ –û–¢–õ–ò–ß–ù–û" : "‚ö†Ô∏è –¢–†–ï–ë–£–ï–¢ –í–ù–ò–ú–ê–ù–ò–Ø"
    } |
| ‚è∞ –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è | **${new Date().toLocaleString()}** | üîÑ REAL-TIME |

---

## üåê **–ì–†–ê–§ –ù–ê–í–ò–ì–ê–¶–ò–Ø**

### üéØ **–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ —Å–ª–æ—è–º:**

\`\`\`mermaid
mindmap
  root((üóÑÔ∏è DATABASE))
    üîµ Business Layer
      üë• users (${results["user"]?.recordCount || 0})
      üìù profiles (${results["user_profiles"]?.recordCount || 0})
      üéÆ sessions (${results["game_sessions"]?.recordCount || 0})
      üìÖ bookings (${results["booking"]?.recordCount || 0})
      üèüÔ∏è courts (${results["court"]?.recordCount || 0})
    üü£ AI/ML Layer  
      ü§ñ AI Logs (${results["ai_suggestion_log"]?.recordCount || 0})
      üß† models (${results["ai_models"]?.recordCount || 0})
      üí° recommendations (${results["recommendations"]?.recordCount || 0})
    üü¢ Financial Layer
      üí∞ payments (${results["payment"]?.recordCount || 0})
      üí≥ transactions (${results["transactions"]?.recordCount || 0})
      üìã subscriptions (${results["subscriptions"]?.recordCount || 0})
    üü† Gaming Layer
      ‚öîÔ∏è matches (${results["game_session"]?.recordCount || 0})
      üèÜ tournaments (${results["tournament"]?.recordCount || 0})
      üìä player stats (${results["player_stats"]?.recordCount || 0})
    üü° Analytics Layer
      üìà events (${results["analytics_events"]?.recordCount || 0})
      üîç behavior (${results["feedback"]?.recordCount || 0})
\`\`\`

---

## üóÑÔ∏è **–í–°–ï –¢–ê–ë–õ–ò–¶–´ –ë–ê–ó–´ –î–ê–ù–ù–´–•**

${Object.entries(results)
  .map(([tableName, data]) => {
    const config = this.tableConfig[tableName];
    if (!config) return "";

    const status = data.error
      ? "‚ùå –û–®–ò–ë–ö–ê"
      : `‚úÖ ${(data.recordCount || 0).toLocaleString()} –∑–∞–ø–∏—Å–µ–π`;

    return `### ${config.icon} **[[${
      config.icon
    } ${tableName}|${tableName.toUpperCase()}]]**
- üìä **–ó–∞–ø–∏—Å–µ–π**: ${status}
- üé® **–°–ª–æ–π**: ${config.color}
- üîó **–°–≤—è–∑–∏**: ${config.relationships.length} —Ç–∞–±–ª–∏—Ü
- üìÅ **–§–∞–π–ª**: \`${data.filePath?.split("/").pop() || "N/A"}\`
${data.error ? `- ‚ö†Ô∏è **–û—à–∏–±–∫–∞**: ${data.error}` : ""}
`;
  })
  .join("\n")}

---

## üîÑ **–°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ò –£–ü–†–ê–í–õ–ï–ù–ò–ï**

### ‚ö° **–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:**
- üîÑ **[[Sync All Tables]]** - –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
- üåê **[[üåê Database Graph]]** - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥—Ä–∞—Ñ —Å–≤—è–∑–µ–π
- üìä **[[Database Analytics]]** - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏
- üéØ **[[Table Health Check]]** - –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–∞–±–ª–∏—Ü

### üìà **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–ª–æ—è–º:**

\`\`\`dataview
TABLE WITHOUT ID
    layer as "üé® –°–ª–æ–π",
    tables as "üóÑÔ∏è –¢–∞–±–ª–∏—Ü", 
    records as "üìä –ó–∞–ø–∏—Å–µ–π",
    status as "üéØ –°—Ç–∞—Ç—É—Å"
WHERE file = this.file
\`\`\`

| üé® **–°–ª–æ–π** | üóÑÔ∏è **–¢–∞–±–ª–∏—Ü** | üìä **–ó–∞–ø–∏—Å–µ–π** | üéØ **–°—Ç–∞—Ç—É—Å** |
|-------------|----------------|----------------|---------------|
| üîµ Business | ${
      Object.values(this.tableConfig).filter((c) => c.color === "blue").length
    } | ${Object.entries(results)
      .filter(([name, data]) => this.tableConfig[name]?.color === "blue")
      .reduce((sum, [_, data]) => sum + (data.recordCount || 0), 0)
      .toLocaleString()} | üü¢ –ê–∫—Ç–∏–≤–µ–Ω |
| üü¢ Financial & Infrastructure | ${
      Object.values(this.tableConfig).filter((c) => c.color === "green").length
    } | ${Object.entries(results)
      .filter(([name, data]) => this.tableConfig[name]?.color === "green")
      .reduce((sum, [_, data]) => sum + (data.recordCount || 0), 0)
      .toLocaleString()} | üü¢ –ê–∫—Ç–∏–≤–µ–Ω |
| üü† Education | ${
      Object.values(this.tableConfig).filter((c) => c.color === "orange").length
    } | ${Object.entries(results)
      .filter(([name, data]) => this.tableConfig[name]?.color === "orange")
      .reduce((sum, [_, data]) => sum + (data.recordCount || 0), 0)
      .toLocaleString()} | üü¢ –ê–∫—Ç–∏–≤–µ–Ω |
| üü£ Gaming | ${
      Object.values(this.tableConfig).filter((c) => c.color === "purple").length
    } | ${Object.entries(results)
      .filter(([name, data]) => this.tableConfig[name]?.color === "purple")
      .reduce((sum, [_, data]) => sum + (data.recordCount || 0), 0)
      .toLocaleString()} | üü¢ –ê–∫—Ç–∏–≤–µ–Ω |
| üü° AI/Analytics | ${
      Object.values(this.tableConfig).filter((c) => c.color === "yellow").length
    } | ${Object.entries(results)
      .filter(([name, data]) => this.tableConfig[name]?.color === "yellow")
      .reduce((sum, [_, data]) => sum + (data.recordCount || 0), 0)
      .toLocaleString()} | üü¢ –ê–∫—Ç–∏–≤–µ–Ω |
| üî¥ System | ${
      Object.values(this.tableConfig).filter((c) => c.color === "red").length
    } | ${Object.entries(results)
      .filter(([name, data]) => this.tableConfig[name]?.color === "red")
      .reduce((sum, [_, data]) => sum + (data.recordCount || 0), 0)
      .toLocaleString()} | üü¢ –ê–∫—Ç–∏–≤–µ–Ω |

---

## üéä **DASHBOARD FEATURES**

### ‚ú® **–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞:**
- üîÑ **Real-time —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è** —Å PostgreSQL
- üåê **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ—ã** —Å–≤—è–∑–µ–π –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏  
- üìä **Dataview —Ç–∞–±–ª–∏—Ü—ã** —Å live-–¥–∞–Ω–Ω—ã–º–∏
- üé® **–¶–≤–µ—Ç–æ–≤–∞—è –∫–æ–¥–∏—Ä–æ–≤–∫–∞** –ø–æ —Å–ª–æ—è–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã
- üîç **–ü–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫** –ø–æ –≤—Å–µ–º –¥–∞–Ω–Ω—ã–º
- üìà **–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞—à–±–æ—Ä–¥—ã** –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
- üéØ **–ù–∞–≤–∏–≥–∞—Ü–∏—è —á–µ—Ä–µ–∑ –≥—Ä–∞—Ñ** –º–µ–∂–¥—É —Å–≤—è–∑–∞–Ω–Ω—ã–º–∏ —Å—É—â–Ω–æ—Å—Ç—è–º–∏

### üíé **–î–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤:**
- üöÄ **–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤–∏–¥** - –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞
- üéÆ **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å** - –º–æ–∂–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
- üì± **–ö—Ä–æ—Å—Å–ø–ª–∞—Ç—Ñ–æ—Ä–º–µ–Ω–Ω–æ—Å—Ç—å** - —Ä–∞–±–æ—Ç–∞–µ—Ç –≤–µ–∑–¥–µ –≥–¥–µ –µ—Å—Ç—å Obsidian
- üîÑ **–ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å** - –¥–∞–Ω–Ω—ã–µ –≤—Å–µ–≥–¥–∞ —Å–≤–µ–∂–∏–µ

---

<div class="dashboard-summary">

## üéâ **–°–¢–ê–¢–£–° –≠–ö–û–°–ò–°–¢–ï–ú–´**

**üî• –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!**

–°–æ–∑–¥–∞–Ω–∞ –ø–æ–ª–Ω–∞—è –≥—Ä–∞—Ñ–æ–≤–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å:
- ‚úÖ **${totalTables} —Ç–∞–±–ª–∏—Ü** —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã
- ‚úÖ **${totalRecords.toLocaleString()} –∑–∞–ø–∏—Å–µ–π** –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞  
- ‚úÖ **${Object.values(this.tableConfig).reduce(
      (sum, config) => sum + config.relationships.length,
      0
    )} —Å–≤—è–∑–µ–π** –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏
- ‚úÖ **5 —Å–ª–æ–µ–≤** –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
- ‚úÖ **Mermaid –¥–∏–∞–≥—Ä–∞–º–º—ã** –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏

**–ö–ª–∏–µ–Ω—Ç –±—É–¥–µ—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ!** üöÄ‚ú®

</div>

---

<style>
.master-dashboard {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
  color: #ffffff;
  padding: 30px;
  border-radius: 25px;
}

.dashboard-summary {
  margin-top: 40px;
  padding: 30px;
  background: rgba(255,215,0,0.15);
  border-radius: 20px;
  border: 3px solid #FFD700;
  box-shadow: 0 8px 32px rgba(255,215,0,0.3);
}

table {
  background: rgba(255,255,255,0.1);
  border-radius: 15px;
  border: 2px solid rgba(255,255,255,0.2);
  backdrop-filter: blur(10px);
}

h2 {
  border-bottom: 4px solid #FFD700;
  padding: 20px;
  margin-top: 40px;
  text-shadow: 3px 3px 6px rgba(0,0,0,0.5);
  background: rgba(255,215,0,0.1);
  border-radius: 15px;
}

h3 {
  color: #FFD700;
  text-shadow: 2px 2px 4px rgba(0,0,0,0.7);
  margin-top: 25px;
}
</style>
`;

    const filePath = path.join(OBSIDIAN_VAULT_PATH, "üöÄ Master Dashboard.md");
    await fs.writeFile(filePath, dashboardContent, "utf8");

    console.log(`‚úÖ –ì–ª–∞–≤–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ —Å–æ–∑–¥–∞–Ω: ${filePath}`);
  }
}

/**
 * üöÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main() {
  const sync = new ObsidianDBSync();

  // –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
  const args = process.argv.slice(2);
  const command = args[0] || "help";

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    const connected = await sync.testConnection();
    if (!connected) {
      process.exit(1);
    }

    switch (command) {
      case "export":
        await sync.exportAISuggestionLogs();
        break;

      case "templates":
        await sync.createTemplates();
        break;

      case "full-sync":
        console.log("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –ë–î...");
        await sync.exportAllTables();
        break;

      case "watch":
        await sync.startWatching();
        break;

      case "stop":
        await sync.stopWatching();
        break;

      case "help":
      default:
        console.log(`
üöÄ **Obsidian Database Sync Tool**

üìã **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
  ‚Ä¢ export      - –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –≤ Obsidian
  ‚Ä¢ full-sync   - –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö 30 —Ç–∞–±–ª–∏—Ü –ë–î
  ‚Ä¢ watch       - –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  ‚Ä¢ stop        - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

üéØ **–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**
  node scripts/obsidian-db-sync.mjs full-sync
  node scripts/obsidian-db-sync.mjs export
  node scripts/obsidian-db-sync.mjs watch

üóÑÔ∏è **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã:** ${Object.keys(sync.tableConfig).length}
üìä **–°–ª–æ–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã:** 6 (Business, Financial, Education, Gaming, AI/Analytics, System)
`);
        break;
    }
  } catch (error) {
    console.error("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error);
    process.exit(1);
  } finally {
    if (command !== "watch") {
      await sync.close();
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏ —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å
if (import.meta.url === `file://${process.argv[1]}`) {
  main();
}

export { ObsidianDBSync };
