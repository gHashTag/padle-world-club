#!/usr/bin/env node

/**
 * üéØ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö –≤ Obsidian –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ö–µ–º—ã –ë–î
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç —Ñ–∞–π–ª—ã —Å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏, –∫–æ—Ç–æ—Ä—ã–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç
 * —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ —Ç–∞–±–ª–∏—Ü –≤ Neon Database
 */

import fs from 'fs/promises';
import path from 'path';

const OBSIDIAN_PATH = 'oxygen-world/Database';

// –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ö–µ–º–µ –ë–î
const demoData = {
  users: [
    {
      id: '550e8400-e29b-41d4-a716-446655440001',
      username: 'david_smith',
      first_name: 'David',
      last_name: 'Smith',
      email: 'david.smith@example.com',
      phone: '+66-81-234-5678',
      member_id: 'PHG001',
      user_role: 'player',
      current_rating: 2485.0,
      bonus_points: 150,
      is_account_verified: true,
      created_at: '2024-01-15T08:00:00Z'
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440002',
      username: 'anna_johnson',
      first_name: 'Anna',
      last_name: 'Johnson',
      email: 'anna.johnson@example.com',
      phone: '+66-81-234-5679',
      member_id: 'PHG002',
      user_role: 'coach',
      current_rating: 2650.0,
      bonus_points: 300,
      is_account_verified: true,
      created_at: '2024-01-10T09:00:00Z'
    },
    {
      id: '550e8400-e29b-41d4-a716-446655440003',
      username: 'sarah_brown',
      first_name: 'Sarah',
      last_name: 'Brown',
      email: 'sarah.brown@example.com',
      phone: '+66-81-234-5680',
      member_id: 'PHG003',
      user_role: 'player',
      current_rating: 1850.0,
      bonus_points: 75,
      is_account_verified: true,
      created_at: '2024-02-01T10:00:00Z'
    }
  ],
  
  venues: [
    {
      id: '660e8400-e29b-41d4-a716-446655440001',
      name: 'Phangan Padel Tennis Club',
      address: 'Paradise Beach, Thong Sala',
      city: 'Koh Phangan',
      country: 'Thailand',
      phone_number: '+66-77-123-456',
      email: 'info@phanganpadel.com',
      is_active: true,
      created_at: '2024-01-01T00:00:00Z'
    }
  ],
  
  courts: [
    {
      id: '770e8400-e29b-41d4-a716-446655440001',
      venue_id: '660e8400-e29b-41d4-a716-446655440001',
      name: 'Tennis Court',
      court_type: 'tennis',
      status: 'active',
      hourly_rate: 1200.00,
      capacity: 4,
      description: 'Professional tennis court with premium surface',
      is_active: true,
      created_at: '2024-01-01T00:00:00Z'
    },
    {
      id: '770e8400-e29b-41d4-a716-446655440002',
      venue_id: '660e8400-e29b-41d4-a716-446655440001',
      name: 'Padel Court',
      court_type: 'padel',
      status: 'active',
      hourly_rate: 600.00,
      capacity: 4,
      description: 'Glass-walled padel court with LED lighting',
      is_active: true,
      created_at: '2024-01-01T00:00:00Z'
    }
  ],
  
  bookings: [
    {
      id: '880e8400-e29b-41d4-a716-446655440001',
      court_id: '770e8400-e29b-41d4-a716-446655440001',
      booked_by_user_id: '550e8400-e29b-41d4-a716-446655440001',
      start_time: '2025-01-31T09:00:00Z',
      end_time: '2025-01-31T10:00:00Z',
      duration_minutes: 60,
      status: 'confirmed',
      total_amount: 1200.00,
      currency: 'THB',
      booking_purpose: 'recreational_play',
      created_at: '2025-01-30T15:00:00Z'
    },
    {
      id: '880e8400-e29b-41d4-a716-446655440002',
      court_id: '770e8400-e29b-41d4-a716-446655440002',
      booked_by_user_id: '550e8400-e29b-41d4-a716-446655440003',
      start_time: '2025-01-31T14:00:00Z',
      end_time: '2025-01-31T15:00:00Z',
      duration_minutes: 60,
      status: 'confirmed',
      total_amount: 600.00,
      currency: 'THB',
      booking_purpose: 'recreational_play',
      created_at: '2025-01-30T16:00:00Z'
    }
  ],
  
  payments: [
    {
      id: '990e8400-e29b-41d4-a716-446655440001',
      user_id: '550e8400-e29b-41d4-a716-446655440001',
      amount: 1200.00,
      currency: 'THB',
      status: 'completed',
      payment_method: 'credit_card',
      description: 'Tennis court booking payment',
      created_at: '2025-01-30T15:05:00Z'
    },
    {
      id: '990e8400-e29b-41d4-a716-446655440002',
      user_id: '550e8400-e29b-41d4-a716-446655440003',
      amount: 600.00,
      currency: 'THB',
      status: 'completed',
      payment_method: 'bank_transfer',
      description: 'Padel court booking payment',
      created_at: '2025-01-30T16:05:00Z'
    }
  ]
};

async function createDemoFiles() {
  console.log('üéØ –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ö–µ–º—ã –ë–î...');
  
  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  await fs.mkdir(OBSIDIAN_PATH, { recursive: true });
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  for (const user of demoData.users) {
    await createUserFile(user);
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –ø–ª–æ—â–∞–¥–æ–∫
  for (const venue of demoData.venues) {
    await createVenueFile(venue);
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –∫–æ—Ä—Ç–æ–≤
  for (const court of demoData.courts) {
    await createCourtFile(court);
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
  for (const booking of demoData.bookings) {
    await createBookingFile(booking);
  }
  
  // –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª—ã –ø–ª–∞—Ç–µ–∂–µ–π
  for (const payment of demoData.payments) {
    await createPaymentFile(payment);
  }
  
  console.log('‚úÖ –î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  console.log('üß† –¢–µ–ø–µ—Ä—å "–í—Ç–æ—Ä–æ–π –ú–æ–∑–≥" —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ö–µ–º–µ Neon DB');
}

async function createUserFile(user) {
  const roleEmoji = {
    player: 'üéæ',
    coach: 'üèÉ‚Äç‚ôÇÔ∏è',
    admin: 'üë®‚Äçüíº',
    club_staff: 'üë∑'
  }[user.user_role] || 'üë§';
  
  const content = `---
title: "${user.first_name} ${user.last_name}"
username: "${user.username}"
first_name: "${user.first_name}"
last_name: "${user.last_name}"
email: "${user.email}"
phone: "${user.phone}"
user_role: "${user.user_role}"
current_rating: ${user.current_rating}
bonus_points: ${user.bonus_points}
member_id: "${user.member_id}"
status: "active"
tags: [user, ${user.user_role}, thailand, neon_schema]
created_at: "${user.created_at.split('T')[0]}"
sync_source: "neon_schema_demo"
last_sync: "${new Date().toISOString()}"
neon_id: "${user.id}"
table_name: "user"
---

# ${roleEmoji} ${user.first_name} ${user.last_name}

## üìã –ü—Ä–æ—Ñ–∏–ª—å ${user.user_role === 'coach' ? '—Ç—Ä–µ–Ω–µ—Ä–∞' : '–∏–≥—Ä–æ–∫–∞'}

- **ID –≤ Neon**: \`${user.id}\`
- **–õ–æ–≥–∏–Ω**: \`= this.username\`
- **–†–µ–π—Ç–∏–Ω–≥**: \`= this.current_rating\` ‚≠ê
- **–†–æ–ª—å**: \`= this.user_role\`
- **–ë–æ–Ω—É—Å—ã**: \`= this.bonus_points\` –±–∞–ª–ª–æ–≤
- **Email**: \`= this.email\`
- **–¢–µ–ª–µ—Ñ–æ–Ω**: \`= this.phone\`
- **ID —É—á–∞—Å—Ç–Ω–∏–∫–∞**: \`= this.member_id\`

## üîó –°–≤—è–∑–∏ –≤ "–í—Ç–æ—Ä–æ–º –ú–æ–∑–≥–µ"

### üß† **–ú–æ–¥–µ–ª—å**
- [[üß† MODEL - User (Central Neuron)|üß† USER Model - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ù–µ–π—Ä–æ–Ω]]

### üìÖ **–ú–æ–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è**
${user.username === 'david_smith' ? '- [[Booking-Tennis-David-Today|üìÖ Tennis Court - –°–µ–≥–æ–¥–Ω—è 09:00]]' : ''}
${user.username === 'sarah_brown' ? '- [[Booking-Padel-Sarah-Today|üìÖ Padel Court - –°–µ–≥–æ–¥–Ω—è 14:00]]' : ''}

### üí∞ **–ú–æ–∏ –ø–ª–∞—Ç–µ–∂–∏**
${user.username === 'david_smith' ? '- [[Payment-David-Tennis|üí∞ 1,200 THB - Tennis Court]]' : ''}
${user.username === 'sarah_brown' ? '- [[Payment-Sarah-Padel|üí∞ 600 THB - Padel Court]]' : ''}

## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

- **–ß–ª–µ–Ω –∫–ª—É–±–∞ —Å**: \`= this.created_at\`
- **–°—Ç–∞—Ç—É—Å –∞–∫–∫–∞—É–Ω—Ç–∞**: ${user.is_account_verified ? '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω' : '‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'}
- **–ü–æ—Å–ª–µ–¥–Ω—è—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è**: \`= this.last_sync\`

---

*üì° –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å Neon Database Schema*
*üß† –ß–∞—Å—Ç—å "–í—Ç–æ—Ä–æ–≥–æ –ú–æ–∑–≥–∞" –°–µ—Ä–≤–µ—Ä–∞*`;

  const fileName = `User-${user.first_name}-${user.last_name}.md`;
  const filePath = path.join(OBSIDIAN_PATH, fileName);
  await fs.writeFile(filePath, content, 'utf8');
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω: ${fileName}`);
}

async function createVenueFile(venue) {
  const content = `---
title: "${venue.name}"
name: "${venue.name}"
address: "${venue.address}"
city: "${venue.city}"
country: "${venue.country}"
phone_number: "${venue.phone_number}"
email: "${venue.email}"
is_active: ${venue.is_active}
tags: [venue, thailand, neon_schema]
created_at: "${venue.created_at.split('T')[0]}"
sync_source: "neon_schema_demo"
last_sync: "${new Date().toISOString()}"
neon_id: "${venue.id}"
table_name: "venue"
---

# üè† ${venue.name}

## üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª—É–±–µ

- **ID –≤ Neon**: \`${venue.id}\`
- **–ù–∞–∑–≤–∞–Ω–∏–µ**: \`= this.name\`
- **–ê–¥—Ä–µ—Å**: \`= this.address\`
- **–ì–æ—Ä–æ–¥**: \`= this.city\`
- **–°—Ç—Ä–∞–Ω–∞**: \`= this.country\`
- **–¢–µ–ª–µ—Ñ–æ–Ω**: \`= this.phone_number\`
- **Email**: \`= this.email\`
- **–°—Ç–∞—Ç—É—Å**: ${venue.is_active ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}

## üîó –°–≤—è–∑–∏ –≤ "–í—Ç–æ—Ä–æ–º –ú–æ–∑–≥–µ"

### üß† **–ú–æ–¥–µ–ª—å**
- [[üß† MODEL - Venue (Spatial Node)|üß† VENUE Model - –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –£–∑–µ–ª]]

### üèì **–ù–∞—à–∏ –∫–æ—Ä—Ç—ã**
- [[Court-Tennis|üèì Tennis Court - Premium]]
- [[Court-Padel|üèì Padel Court - Glass]]

### üë• **–ù–∞—à–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏**
- [[User-David-Smith|üë§ David Smith - –¢–æ–ø –∏–≥—Ä–æ–∫]]
- [[User-Anna-Johnson|üë§ Anna Johnson - VIP —Ç—Ä–µ–Ω–µ—Ä]]
- [[User-Sarah-Brown|üë§ Sarah Brown - –ü–∞–¥–µ–ª —ç–Ω—Ç—É–∑–∏–∞—Å—Ç]]

---

*üì° –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å Neon Database Schema*
*üß† –ß–∞—Å—Ç—å "–í—Ç–æ—Ä–æ–≥–æ –ú–æ–∑–≥–∞" –°–µ—Ä–≤–µ—Ä–∞*`;

  const fileName = `Venue-${venue.name.replace(/\s+/g, '-')}.md`;
  const filePath = path.join(OBSIDIAN_PATH, fileName);
  await fs.writeFile(filePath, content, 'utf8');
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω: ${fileName}`);
}

async function createCourtFile(court) {
  const typeEmoji = court.court_type === 'tennis' ? 'üéæ' : 'üèì';
  
  const content = `---
title: "${court.name}"
name: "${court.name}"
court_type: "${court.court_type}"
status: "${court.status}"
hourly_rate: ${court.hourly_rate}
capacity: ${court.capacity}
description: "${court.description}"
is_active: ${court.is_active}
tags: [court, ${court.court_type}, thailand, neon_schema]
created_at: "${court.created_at.split('T')[0]}"
sync_source: "neon_schema_demo"
last_sync: "${new Date().toISOString()}"
neon_id: "${court.id}"
venue_id: "${court.venue_id}"
table_name: "court"
---

# ${typeEmoji} ${court.name}

## üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—Ä—Ç–µ

- **ID –≤ Neon**: \`${court.id}\`
- **–ù–∞–∑–≤–∞–Ω–∏–µ**: \`= this.name\`
- **–¢–∏–ø**: \`= this.court_type\`
- **–°—Ç–∞—Ç—É—Å**: \`= this.status\`
- **–¶–µ–Ω–∞ –∑–∞ —á–∞—Å**: \`= this.hourly_rate\` THB
- **–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å**: \`= this.capacity\` —á–µ–ª–æ–≤–µ–∫
- **–û–ø–∏—Å–∞–Ω–∏–µ**: \`= this.description\`

## üîó –°–≤—è–∑–∏ –≤ "–í—Ç–æ—Ä–æ–º –ú–æ–∑–≥–µ"

### üß† **–ú–æ–¥–µ–ª—å**
- [[üß† MODEL - Court (Infrastructure Node)|üß† COURT Model - –ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π –£–∑–µ–ª]]

### üè† **–ö–ª—É–±**
- [[Venue-Phangan-Padel-Tennis-Club|üè† Phangan Padel Tennis Club]]

### üìÖ **–°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è**
${court.court_type === 'tennis' ? '- [[Booking-Tennis-David-Today|üìÖ David Smith - 09:00-10:00]]' : ''}
${court.court_type === 'padel' ? '- [[Booking-Padel-Sarah-Today|üìÖ Sarah Brown - 14:00-15:00]]' : ''}

---

*üì° –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å Neon Database Schema*
*üß† –ß–∞—Å—Ç—å "–í—Ç–æ—Ä–æ–≥–æ –ú–æ–∑–≥–∞" –°–µ—Ä–≤–µ—Ä–∞*`;

  const fileName = `Court-${court.name.replace(/\s+/g, '-')}.md`;
  const filePath = path.join(OBSIDIAN_PATH, fileName);
  await fs.writeFile(filePath, content, 'utf8');
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω: ${fileName}`);
}

async function createBookingFile(booking) {
  const user = demoData.users.find(u => u.id === booking.booked_by_user_id);
  const court = demoData.courts.find(c => c.id === booking.court_id);
  
  const content = `---
title: "${user.first_name} ${user.last_name} - ${court.name}"
court_name: "${court.name}"
user_name: "${user.first_name} ${user.last_name}"
start_time: "${booking.start_time}"
end_time: "${booking.end_time}"
duration_minutes: ${booking.duration_minutes}
status: "${booking.status}"
total_amount: ${booking.total_amount}
currency: "${booking.currency}"
booking_purpose: "${booking.booking_purpose}"
tags: [booking, today, ${court.court_type}, neon_schema]
created_at: "${booking.created_at.split('T')[0]}"
sync_source: "neon_schema_demo"
last_sync: "${new Date().toISOString()}"
neon_id: "${booking.id}"
court_id: "${booking.court_id}"
user_id: "${booking.booked_by_user_id}"
table_name: "booking"
---

# üìÖ ${user.first_name} ${user.last_name} - ${court.name}

## üìã –î–µ—Ç–∞–ª–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

- **ID –≤ Neon**: \`${booking.id}\`
- **–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞**: \`= this.start_time\`
- **–í—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è**: \`= this.end_time\`
- **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**: \`= this.duration_minutes\` –º–∏–Ω—É—Ç
- **–°—Ç–∞—Ç—É—Å**: \`= this.status\`
- **–°—É–º–º–∞**: \`= this.total_amount\` \`= this.currency\`
- **–¶–µ–ª—å**: \`= this.booking_purpose\`

## üîó –°–≤—è–∑–∏ –≤ "–í—Ç–æ—Ä–æ–º –ú–æ–∑–≥–µ"

### üß† **–ú–æ–¥–µ–ª—å**
- [[üß† MODEL - Booking (Temporal Node)|üß† BOOKING Model - –í—Ä–µ–º–µ–Ω–Ω–æ–π –£–∑–µ–ª]]

### üë§ **–ö–ª–∏–µ–Ω—Ç**
- [[User-${user.first_name}-${user.last_name}|üë§ ${user.first_name} ${user.last_name}]]

### üèì **–ö–æ—Ä—Ç**
- [[Court-${court.name.replace(/\s+/g, '-')}|${court.court_type === 'tennis' ? 'üéæ' : 'üèì'} ${court.name}]]

### üí∞ **–ü–ª–∞—Ç–µ–∂**
- [[Payment-${user.first_name}-${court.name.replace(/\s+/g, '-')}|üí∞ ${booking.total_amount} THB]]

---

*üì° –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å Neon Database Schema*
*üß† –ß–∞—Å—Ç—å "–í—Ç–æ—Ä–æ–≥–æ –ú–æ–∑–≥–∞" –°–µ—Ä–≤–µ—Ä–∞*`;

  const fileName = `Booking-${court.name.replace(/\s+/g, '-')}-${user.first_name}-Today.md`;
  const filePath = path.join(OBSIDIAN_PATH, fileName);
  await fs.writeFile(filePath, content, 'utf8');
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω: ${fileName}`);
}

async function createPaymentFile(payment) {
  const user = demoData.users.find(u => u.id === payment.user_id);
  
  const content = `---
title: "${user.first_name} ${user.last_name} - ${payment.amount} ${payment.currency}"
user_name: "${user.first_name} ${user.last_name}"
amount: ${payment.amount}
currency: "${payment.currency}"
status: "${payment.status}"
payment_method: "${payment.payment_method}"
description: "${payment.description}"
tags: [payment, ${payment.status}, neon_schema]
created_at: "${payment.created_at.split('T')[0]}"
sync_source: "neon_schema_demo"
last_sync: "${new Date().toISOString()}"
neon_id: "${payment.id}"
user_id: "${payment.user_id}"
table_name: "payment"
---

# üí∞ ${user.first_name} ${user.last_name} - ${payment.amount} ${payment.currency}

## üìã –î–µ—Ç–∞–ª–∏ –ø–ª–∞—Ç–µ–∂–∞

- **ID –≤ Neon**: \`${payment.id}\`
- **–°—É–º–º–∞**: \`= this.amount\` \`= this.currency\`
- **–°—Ç–∞—Ç—É—Å**: \`= this.status\`
- **–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã**: \`= this.payment_method\`
- **–û–ø–∏—Å–∞–Ω–∏–µ**: \`= this.description\`

## üîó –°–≤—è–∑–∏ –≤ "–í—Ç–æ—Ä–æ–º –ú–æ–∑–≥–µ"

### üß† **–ú–æ–¥–µ–ª—å**
- [[üß† MODEL - Payment (Financial Node)|üß† PAYMENT Model - –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –£–∑–µ–ª]]

### üë§ **–ö–ª–∏–µ–Ω—Ç**
- [[User-${user.first_name}-${user.last_name}|üë§ ${user.first_name} ${user.last_name}]]

---

*üì° –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å Neon Database Schema*
*üß† –ß–∞—Å—Ç—å "–í—Ç–æ—Ä–æ–≥–æ –ú–æ–∑–≥–∞" –°–µ—Ä–≤–µ—Ä–∞*`;

  const fileName = `Payment-${user.first_name}-${payment.description.includes('Tennis') ? 'Tennis' : 'Padel'}.md`;
  const filePath = path.join(OBSIDIAN_PATH, fileName);
  await fs.writeFile(filePath, content, 'utf8');
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω: ${fileName}`);
}

// –ó–∞–ø—É—Å–∫
createDemoFiles().catch(console.error);
