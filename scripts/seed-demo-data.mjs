#!/usr/bin/env node
/**
 * üå± –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
 */

import { Pool } from "pg";
import dotenv from "dotenv";

dotenv.config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: { rejectUnauthorized: false },
});

async function seedDemoData() {
  console.log("üå± –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...");

  const client = await pool.connect();

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
    const userCount = await client.query(
      'SELECT COUNT(*) as count FROM "user"'
    );
    console.log(`üë• –¢–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: ${userCount.rows[0].count}`);

    if (parseInt(userCount.rows[0].count) === 0) {
      console.log("‚ûï –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...");

      // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–º–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
      const demoUsers = [
        {
          username: "alex_tennis",
          password_hash: "demo_hash_1",
          first_name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä",
          last_name: "–¢–µ–Ω–Ω–∏—Å–æ–≤",
          email: "alex@phangan-padel.com",
          phone: "+66801234567",
          member_id: "MEMBER_001",
          user_role: "player",
          current_rating: 1650,
          bonus_points: 150,
        },
        {
          username: "maria_coach",
          password_hash: "demo_hash_2",
          first_name: "–ú–∞—Ä–∏—è",
          last_name: "–ö–æ—É—á–µ–≤–∞",
          email: "maria@phangan-padel.com",
          phone: "+66801234568",
          member_id: "MEMBER_002",
          user_role: "coach",
          current_rating: 1850,
          bonus_points: 250,
        },
        {
          username: "john_player",
          password_hash: "demo_hash_3",
          first_name: "John",
          last_name: "Smith",
          email: "john@phangan-padel.com",
          phone: "+66801234569",
          member_id: "MEMBER_003",
          user_role: "player",
          current_rating: 1450,
          bonus_points: 75,
        },
        {
          username: "thai_admin",
          password_hash: "demo_hash_4",
          first_name: "‡∏™‡∏°‡∏ä‡∏≤‡∏¢",
          last_name: "‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£",
          email: "admin@phangan-padel.com",
          phone: "+66801234570",
          member_id: "MEMBER_004",
          user_role: "admin",
          current_rating: 1500,
          bonus_points: 500,
        },
        {
          username: "anna_beginner",
          password_hash: "demo_hash_5",
          first_name: "Anna",
          last_name: "Novak",
          email: "anna@phangan-padel.com",
          phone: "+66801234571",
          member_id: "MEMBER_005",
          user_role: "player",
          current_rating: 1200,
          bonus_points: 25,
        },
      ];

      for (const user of demoUsers) {
        await client.query(
          `
          INSERT INTO "user" (
            username, password_hash, first_name, last_name, email, phone,
            member_id, user_role, current_rating, bonus_points
          ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10)
        `,
          [
            user.username,
            user.password_hash,
            user.first_name,
            user.last_name,
            user.email,
            user.phone,
            user.member_id,
            user.user_role,
            user.current_rating,
            user.bonus_points,
          ]
        );

        console.log(
          `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.first_name} ${user.last_name} (${user.user_role})`
        );
      }
    } else {
      console.log("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ");
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º venues
    const venueCount = await client.query(
      'SELECT COUNT(*) as count FROM "venue"'
    );
    console.log(`üèüÔ∏è –¢–µ–∫—É—â–∏—Ö –ø–ª–æ—â–∞–¥–æ–∫ –≤ –ë–î: ${venueCount.rows[0].count}`);

    if (parseInt(venueCount.rows[0].count) === 0) {
      console.log("‚ûï –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ø–ª–æ—â–∞–¥–∫–∏...");

      const demoVenues = [
        {
          name: "Phangan Padel Club Main",
          address: "123 Haad Rin Beach Road, Koh Phangan",
          city: "Surat Thani",
          country: "Thailand",
          phone_number: "+66801234567",
          email: "info@phangan-padel.com",
        },
        {
          name: "Sunset Tennis Courts",
          address: "456 Thong Nai Pan Beach, Koh Phangan",
          city: "Surat Thani",
          country: "Thailand",
          phone_number: "+66801234568",
          email: "sunset@phangan-padel.com",
        },
      ];

      for (const venue of demoVenues) {
        await client.query(
          `
          INSERT INTO "venue" (name, address, city, country, phone_number, email)
          VALUES ($1, $2, $3, $4, $5, $6)
        `,
          [
            venue.name,
            venue.address,
            venue.city,
            venue.country,
            venue.phone_number,
            venue.email,
          ]
        );

        console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞: ${venue.name}`);
      }
    }

    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log("\nüìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:");

    const finalStats = await client.query(`
      SELECT 
        'users' as table_name,
        COUNT(*) as total_records
      FROM "user"
      UNION ALL
      SELECT 
        'venues' as table_name,
        COUNT(*) as total_records  
      FROM "venue"
      UNION ALL
      SELECT 
        'courts' as table_name,
        COUNT(*) as total_records
      FROM "court"  
      UNION ALL
      SELECT 
        'bookings' as table_name,
        COUNT(*) as total_records
      FROM "booking"
    `);

    console.table(finalStats.rows);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log("\nüë• –ü–†–ò–ú–ï–† –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:");
    const usersPreview = await client.query(`
      SELECT 
        username as "–õ–æ–≥–∏–Ω",
        first_name as "–ò–º—è",
        last_name as "–§–∞–º–∏–ª–∏—è", 
        user_role as "–†–æ–ª—å",
        current_rating as "–†–µ–π—Ç–∏–Ω–≥",
        bonus_points as "–ë–æ–Ω—É—Å—ã"
      FROM "user" 
      ORDER BY current_rating DESC 
      LIMIT 5
    `);

    console.table(usersPreview.rows);
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:", error.message);
  } finally {
    client.release();
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫
seedDemoData();
