#!/bin/bash

# üé§ –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MCP Voice Server
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ API

set -e

echo "üé§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MCP Voice Server..."
echo "=================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
print_status() {
    if [ $1 -eq 0 ]; then
        echo -e "${GREEN}‚úÖ $2${NC}"
    else
        echo -e "${RED}‚ùå $2${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
print_header() {
    echo -e "\n${BLUE}üîç $1${NC}"
    echo "----------------------------------------"
}

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript
print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ TypeScript"
if bun run typecheck; then
    print_status 0 "TypeScript —Ç–∏–ø—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã"
else
    print_status 1 "–û—à–∏–±–∫–∏ TypeScript —Ç–∏–ø–æ–≤"
    exit 1
fi

# 2. –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤
print_header "Unit —Ç–µ—Å—Ç—ã"
echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ MCP Voice Server..."
if bun test src/__tests__/unit/mcp-voice-server/basic-server.test.ts; then
    print_status 0 "MCP Voice Server —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏"
else
    print_status 1 "MCP Voice Server —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã"
fi

echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ BookingService..."
if bun test src/__tests__/unit/services/booking-service.test.ts; then
    print_status 0 "BookingService —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏"
else
    print_status 1 "BookingService —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã"
fi

echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Voice AI..."
if bun test src/__tests__/unit/services/voice-ai.test.ts; then
    print_status 0 "Voice AI —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏"
else
    print_status 1 "Voice AI —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã"
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤
print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ MCP —Å–µ—Ä–≤–µ—Ä–∞..."
if node -e "
const { createVoiceServer, handlePing, handleVoiceBooking, handleSelfTest } = require('./src/mcp-voice-server/src/index.ts');
console.log('‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:', Object.keys({ createVoiceServer, handlePing, handleVoiceBooking, handleSelfTest }));
" 2>/dev/null; then
    print_status 0 "–ò–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    echo -e "${YELLOW}‚ö†Ô∏è Node.js –∏–º–ø–æ—Ä—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ Bun...${NC}"
    if bun -e "
import { createVoiceServer, handlePing, handleVoiceBooking, handleSelfTest } from './src/mcp-voice-server/src/index.ts';
console.log('‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ');
console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:', Object.keys({ createVoiceServer, handlePing, handleVoiceBooking, handleSelfTest }));
"; then
        print_status 0 "–ò–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ Bun"
    else
        print_status 1 "–ü—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏"
    fi
fi

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP
print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ MCP"
if [ -f "mcp-config.json" ]; then
    print_status 0 "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MCP –Ω–∞–π–¥–µ–Ω–∞"
    echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
    cat mcp-config.json | head -10
else
    print_status 1 "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MCP –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
fi

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞
print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞"
required_files=(
    "src/mcp-voice-server/src/index.ts"
    "src/mcp-voice-server/package.json"
    "src/mcp-voice-server/tsconfig.json"
    "src/services/voice-ai.ts"
    "src/services/booking-service.ts"
    "VOICE_FRAMEWORK_README.md"
    "VOICE_ROADMAP.md"
)

all_files_exist=true
for file in "${required_files[@]}"; do
    if [ -f "$file" ]; then
        echo -e "${GREEN}‚úÖ${NC} $file"
    else
        echo -e "${RED}‚ùå${NC} $file"
        all_files_exist=false
    fi
done

if [ "$all_files_exist" = true ]; then
    print_status 0 "–í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç"
else
    print_status 1 "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã"
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
print_header "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏"
docs_files=(
    "src/mcp-voice-server/README.md"
    "VOICE_FRAMEWORK_README.md"
    "VOICE_ROADMAP.md"
)

for doc in "${docs_files[@]}"; do
    if [ -f "$doc" ]; then
        lines=$(wc -l < "$doc")
        echo -e "${GREEN}‚úÖ${NC} $doc ($lines —Å—Ç—Ä–æ–∫)"
    else
        echo -e "${RED}‚ùå${NC} $doc"
    fi
done

# 7. –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
print_header "–ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç"
echo "üé§ MCP Voice Server –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
echo ""
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:"
echo "   ‚Ä¢ ping - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"
echo "   ‚Ä¢ parse_voice_command - –ø–∞—Ä—Å–∏–Ω–≥ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥"
echo "   ‚Ä¢ voice_booking - –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
echo "   ‚Ä¢ self_test - —Å–∞–º–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞"
echo ""
echo "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –ü–æ–¥–∫–ª—é—á–∏—Ç—å MCP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫ Claude Desktop"
echo "   2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã"
echo "   3. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ API endpoints"
echo ""
echo "üìÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è Claude Desktop:"
echo "   –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ mcp-config.json –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Claude"
echo ""
echo -e "${GREEN}üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!${NC}"
