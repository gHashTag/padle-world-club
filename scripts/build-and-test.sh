#!/bin/bash

# Telegram Bot Starter Kit - –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
#
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–∏–ø–æ–≤, —Å–±–æ—Ä–∫—É (–µ—Å–ª–∏ –µ—Å—Ç—å) –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞.

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN="\033[0;32m"
YELLOW="\033[0;33m"
RED="\033[0;31m"
BLUE="\033[0;34m"
NC="\033[0m" # No Color

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT_DIR="$(dirname "$SCRIPT_DIR")" # –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ - —ç—Ç–æ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è scripts/
LOGS_DIR="$SCRIPT_DIR/.logs"

# –õ–æ–≥-—Ñ–∞–π–ª
LOG_FILE="$LOGS_DIR/build-and-test.log"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if [ ! -d "$LOGS_DIR" ]; then
  mkdir -p "$LOGS_DIR"
fi

# –°–æ–∑–¥–∞–µ–º/–æ—á–∏—â–∞–µ–º –ª–æ–≥-—Ñ–∞–π–ª
echo "üöÄ –õ–æ–≥ —Å–±–æ—Ä–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram Bot Starter Kit ($(date '+%Y-%m-%d %H:%M:%S'))" > "$LOG_FILE"
echo "" >> "$LOG_FILE"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
  local timestamp=$(date "+%Y-%m-%d %H:%M:%S")
  echo -e "$timestamp $1" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ node_modules –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
# –ú–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω–∞ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º: ./scripts/build-and-test.sh clean
clean_and_install() {
  log "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ node_modules –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
  
  cd "$PROJECT_ROOT_DIR"
  
  # –ò—Å–ø–æ–ª—å–∑—É–µ–º bun install –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  bun install
  
  if [ $? -eq 0 ]; then
    log "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.${NC}"
    return 0
  else
    log "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.${NC}"
    return 1
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∏–ø–æ–≤ TypeScript
check_types() {
  log "${YELLOW}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ TypeScript...${NC}"
  
  cd "$PROJECT_ROOT_DIR"
  bun run typecheck
  
  if [ $? -eq 0 ]; then
    log "${GREEN}‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω–∞.${NC}"
    return 0
  else
    log "${RED}‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∏–ø–æ–≤. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º.${NC}"
    return 1
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞)
# –í —Ç–µ–∫—É—â–µ–º —Å—Ç–∞—Ä—Ç–µ—Ä-–∫–∏—Ç–µ –Ω–∞ TypeScript/Bun —è–≤–Ω–∞—è —Å–±–æ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º —Ç–µ—Å—Ç–æ–≤ –º–æ–∂–µ—Ç –Ω–µ —Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è,
# —Ç–∞–∫ –∫–∞–∫ Bun –≤—ã–ø–æ–ª–Ω—è–µ—Ç TypeScript "–Ω–∞ –ª–µ—Ç—É". –û—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –ø–æ—è–≤–∏—Ç—Å—è —à–∞–≥ —Å–±–æ—Ä–∫–∏.
build_project() {
  log "${YELLOW}üî® –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞)...${NC}"
  
  cd "$PROJECT_ROOT_DIR"
  if [ -f "package.json" ] && grep -q '"build"' package.json; then
    bun run build
    if [ $? -eq 0 ]; then
      log "${GREEN}‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω.${NC}"
      return 0
    else
      log "${RED}‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –ø—Ä–æ–µ–∫—Ç–∞.${NC}"
      return 1
    fi
  else
    log "${YELLOW}‚ÑπÔ∏è  –ö–æ–º–∞–Ω–¥–∞ 'bun run build' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ package.json –∏–ª–∏ package.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–ø—É—Å–∫ —à–∞–≥–∞ —Å–±–æ—Ä–∫–∏.${NC}"
    return 0 # –°—á–∏—Ç–∞–µ–º —É—Å–ø–µ—à–Ω—ã–º, –µ—Å–ª–∏ —Å–±–æ—Ä–∫–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
  fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ (—é–Ω–∏—Ç –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –≤–º–µ—Å—Ç–µ)
run_tests() {
  log "${YELLOW}üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ (—é–Ω–∏—Ç –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ)...${NC}"
  
  cd "$PROJECT_ROOT_DIR"
  # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã, Vitest —Å–∞–º –Ω–∞–π–¥–µ—Ç –∏—Ö –ø–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  bun test
  
  if [ $? -eq 0 ]; then
    log "${GREEN}‚úÖ –¢–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã.${NC}"
    return 0
  else
    log "${RED}‚ùå –û—à–∏–±–∫–∏ –≤ —Ç–µ—Å—Ç–∞—Ö.${NC}"
    return 1
  fi
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
  log "${BLUE}üöÄ –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–±–æ—Ä–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è Telegram Bot Starter Kit${NC}"
  
  # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  if [ "$1" == "clean" ]; then
    clean_and_install
    if [ $? -ne 0 ]; then
      log "${RED}‚ùå –ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ—Ä–≤–∞–Ω –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π.${NC}"
      return 1
    fi
  fi

  # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
  check_types
  if [ $? -ne 0 ]; then
    log "${RED}‚ùå –ü—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ—Ä–≤–∞–Ω –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ —Ç–∏–ø–æ–≤.${NC}"
    return 1
  fi
  
  # 2. –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
  build_project
  if [ $? -ne 0 ]; then
    log "${RED}‚ùå –ü—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–µ—Ä–≤–∞–Ω –∏–∑-–∑–∞ –æ—à–∏–±–æ–∫ —Å–±–æ—Ä–∫–∏.${NC}"
    return 1
  fi
  
  # 3. –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
  run_tests
  TESTS_RESULT=$?
  
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤
  if [ $TESTS_RESULT -eq 0 ]; then
    log "${GREEN}üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ —Ç–µ—Å—Ç—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤!${NC}"
    return 0
  else
    log "${RED}‚ö†Ô∏è –ü—Ä–æ—Ü–µ—Å—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤.${NC}"
    return 1
  fi
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
exit $? 