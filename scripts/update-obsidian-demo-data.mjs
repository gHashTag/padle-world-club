#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Obsidian –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ
 * –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 */

import fs from 'fs/promises';
import path from 'path';

const OBSIDIAN_DIR = 'oxygen-world/Database';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function createUserFiles() {
  console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
  
  const users = [
    {
      id: 'user-001',
      first_name: 'David',
      last_name: 'Smith',
      username: 'david_smith',
      email: 'david.smith@example.com',
      phone: '+66-89-123-4567',
      user_role: 'player',
      current_rating: 2485,
      member_id: 'PHG001',
      total_games: 45,
      wins: 32,
      losses: 13,
      favorite_sport: 'tennis'
    },
    {
      id: 'user-002',
      first_name: 'Maria',
      last_name: 'Rodriguez',
      username: 'maria_rodriguez',
      email: 'maria.rodriguez@example.com',
      phone: '+66-81-234-5678',
      user_role: 'player',
      current_rating: 2420,
      member_id: 'PHG002',
      total_games: 38,
      wins: 28,
      losses: 10,
      favorite_sport: 'padel'
    },
    {
      id: 'user-003',
      first_name: 'Anna',
      last_name: 'Johnson',
      username: 'anna_johnson',
      email: 'anna.johnson@example.com',
      phone: '+66-82-345-6789',
      user_role: 'trainer',
      current_rating: 2380,
      member_id: 'PHG003',
      total_games: 52,
      wins: 41,
      losses: 11,
      favorite_sport: 'tennis'
    },
    {
      id: 'user-004',
      first_name: 'John',
      last_name: 'Wilson',
      username: 'john_wilson',
      email: 'john.wilson@example.com',
      phone: '+66-83-456-7890',
      user_role: 'player',
      current_rating: 2340,
      member_id: 'PHG004',
      total_games: 29,
      wins: 19,
      losses: 10,
      favorite_sport: 'padel'
    },
    {
      id: 'user-005',
      first_name: 'Sarah',
      last_name: 'Brown',
      username: 'sarah_brown',
      email: 'sarah.brown@example.com',
      phone: '+66-84-567-8901',
      user_role: 'player',
      current_rating: 2310,
      member_id: 'PHG005',
      total_games: 33,
      wins: 22,
      losses: 11,
      favorite_sport: 'tennis'
    }
  ];

  for (const user of users) {
    const fileName = `User-${user.first_name}-${user.last_name}.md`;
    const filePath = path.join(OBSIDIAN_DIR, fileName);
    
    const content = `---
title: "${user.first_name} ${user.last_name} - Player Profile"
user_id: "${user.id}"
first_name: "${user.first_name}"
last_name: "${user.last_name}"
username: "${user.username}"
email: "${user.email}"
phone: "${user.phone}"
user_role: "${user.user_role}"
current_rating: ${user.current_rating}
member_id: "${user.member_id}"
total_games: ${user.total_games}
wins: ${user.wins}
losses: ${user.losses}
favorite_sport: "${user.favorite_sport}"
created_at: "2024-01-15T10:30:00"
last_active: "2024-01-31T${Math.floor(Math.random() * 24).toString().padStart(2, '0')}:${Math.floor(Math.random() * 60).toString().padStart(2, '0')}:00"
tags: [user, player, ${user.favorite_sport}, active]
---

# üë§ ${user.first_name} ${user.last_name} - Player Profile

## –û—Å–Ω–æ–≤–Ω–∞—è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

- **–ò–º—è**: \`= this.first_name\` \`= this.last_name\`
- **–õ–æ–≥–∏–Ω**: \`= this.username\`
- **Email**: \`= this.email\`
- **–¢–µ–ª–µ—Ñ–æ–Ω**: \`= this.phone\`
- **–†–æ–ª—å**: \`= this.user_role\`
- **ID —É—á–∞—Å—Ç–Ω–∏–∫–∞**: \`= this.member_id\`

## –ò–≥—Ä–æ–≤–∞—è –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

- **–¢–µ–∫—É—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥**: ‚≠ê \`= this.current_rating\`
- **–í—Å–µ–≥–æ –∏–≥—Ä**: \`= this.total_games\`
- **–ü–æ–±–µ–¥**: ‚úÖ \`= this.wins\`
- **–ü–æ—Ä–∞–∂–µ–Ω–∏–π**: ‚ùå \`= this.losses\`
- **–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥**: ${Math.round((user.wins / user.total_games) * 100)}%
- **–õ—é–±–∏–º—ã–π —Å–ø–æ—Ä—Ç**: üéæ \`= this.favorite_sport\`

## –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å

- **–°–æ–∑–¥–∞–Ω**: \`= this.created_at\`
- **–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å**: \`= this.last_active\`
- **–°—Ç–∞—Ç—É—Å**: üü¢ –ê–∫—Ç–∏–≤–Ω—ã–π

## –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è

${user.user_role === 'trainer' ? '- üèÜ **–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä**' : ''}
${user.current_rating > 2400 ? '- ü•á **–¢–æ–ø-3 –∏–≥—Ä–æ–∫ –∫–ª—É–±–∞**' : ''}
${user.wins > 30 ? '- üéØ **30+ –ø–æ–±–µ–¥**' : ''}
${user.total_games > 40 ? '- üìà **40+ –∏–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ**' : ''}

---

*–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∏–≥—Ä—ã*
*üèùÔ∏è Phangan Padel Tennis Club Member*`;

    await fs.writeFile(filePath, content, 'utf8');
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª: ${fileName}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
async function createMoreBookings() {
  console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...');
  
  const bookings = [
    {
      id: 'BK004',
      court_name: 'Padel Court',
      user_name: 'John Wilson',
      start_time: '2024-01-31T14:00:00',
      end_time: '2024-01-31T15:00:00',
      duration_minutes: 60,
      status: 'confirmed',
      total_amount: 700,
      booking_purpose: 'recreational_play',
      participants: 4,
      payment_status: 'paid'
    },
    {
      id: 'BK005',
      court_name: 'Tennis Court',
      user_name: 'Sarah Brown',
      start_time: '2024-01-31T16:00:00',
      end_time: '2024-01-31T17:30:00',
      duration_minutes: 90,
      status: 'confirmed',
      total_amount: 1350,
      booking_purpose: 'training_session',
      participants: 2,
      payment_status: 'paid'
    }
  ];

  for (const booking of bookings) {
    const fileName = `Booking-Today-${booking.id.slice(-3)}.md`;
    const filePath = path.join(OBSIDIAN_DIR, fileName);
    
    const content = `---
title: "Booking: ${booking.court_name} - ${booking.user_name}"
booking_id: "${booking.id}"
court_name: "${booking.court_name}"
user_name: "${booking.user_name}"
start_time: "${booking.start_time}"
end_time: "${booking.end_time}"
duration_minutes: ${booking.duration_minutes}
status: "${booking.status}"
total_amount: ${booking.total_amount}
booking_purpose: "${booking.booking_purpose}"
participants: ${booking.participants}
payment_status: "${booking.payment_status}"
created_at: "2024-01-30T${Math.floor(Math.random() * 24).toString().padStart(2, '0')}:${Math.floor(Math.random() * 60).toString().padStart(2, '0')}:00"
tags: [booking, ${booking.court_name.toLowerCase().replace(' ', '')}, confirmed, today]
---

# üìÖ Booking: ${booking.court_name} - ${booking.user_name}

## –î–µ—Ç–∞–ª–∏ –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è

- **–ö–æ—Ä—Ç**: \`= this.court_name\`
- **–í—Ä–µ–º—è**: \`= this.start_time\` - \`= this.end_time\`
- **–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å**: \`= this.duration_minutes\` –º–∏–Ω—É—Ç
- **–°—Ç–∞—Ç—É—Å**: \`= this.status\`
- **–°—É–º–º–∞**: ‚Çø \`= this.total_amount\`
- **–£—á–∞—Å—Ç–Ω–∏–∫–∏**: \`= this.participants\` —á–µ–ª–æ–≤–µ–∫
- **–¶–µ–ª—å**: \`= this.booking_purpose\`

## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –û–ø–ª–∞—Ç–µ

- **–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã**: \`= this.payment_status\`
- **–°–æ–∑–¥–∞–Ω–æ**: \`= this.created_at\`

---

*–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å —Å–∏—Å—Ç–µ–º–æ–π –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π*`;

    await fs.writeFile(filePath, content, 'utf8');
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: ${fileName}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π
async function createMorePayments() {
  console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π...');
  
  const payments = [
    {
      id: 'PAY003',
      user_name: 'John Wilson',
      amount: 700,
      currency: 'THB',
      payment_method: 'qr_code',
      status: 'completed',
      payment_type: 'court_booking',
      booking_id: 'BK004'
    },
    {
      id: 'PAY004',
      user_name: 'Sarah Brown',
      amount: 1350,
      currency: 'THB',
      payment_method: 'card',
      status: 'completed',
      payment_type: 'court_booking',
      booking_id: 'BK005'
    }
  ];

  for (const payment of payments) {
    const fileName = `Payment-${payment.id.slice(-3)}.md`;
    const filePath = path.join(OBSIDIAN_DIR, fileName);
    
    const content = `---
title: "Payment: ${payment.payment_type} - ${payment.user_name}"
payment_id: "${payment.id}"
user_name: "${payment.user_name}"
amount: ${payment.amount}
currency: "${payment.currency}"
payment_method: "${payment.payment_method}"
status: "${payment.status}"
payment_type: "${payment.payment_type}"
booking_id: "${payment.booking_id}"
created_at: "2024-01-31T${Math.floor(Math.random() * 24).toString().padStart(2, '0')}:${Math.floor(Math.random() * 60).toString().padStart(2, '0')}:00"
processed_at: "2024-01-31T${Math.floor(Math.random() * 24).toString().padStart(2, '0')}:${Math.floor(Math.random() * 60).toString().padStart(2, '0')}:00"
tags: [payment, ${payment.payment_method}, ${payment.status}]
---

# üí∞ Payment: ${payment.payment_type} - ${payment.user_name}

## –î–µ—Ç–∞–ª–∏ –ü–ª–∞—Ç–µ–∂–∞

- **–°—É–º–º–∞**: ‚Çø \`= this.amount\` \`= this.currency\`
- **–ö–ª–∏–µ–Ω—Ç**: \`= this.user_name\`
- **–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã**: \`= this.payment_method\`
- **–°—Ç–∞—Ç—É—Å**: \`= this.status\`
- **–¢–∏–ø**: \`= this.payment_type\`
- **–°–≤—è–∑–∞–Ω–Ω–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ**: \`= this.booking_id\`

## –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ú–µ—Ç–∫–∏

- **–°–æ–∑–¥–∞–Ω**: \`= this.created_at\`
- **–û–±—Ä–∞–±–æ—Ç–∞–Ω**: \`= this.processed_at\`

---

*–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π*`;

    await fs.writeFile(filePath, content, 'utf8');
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –ø–ª–∞—Ç–µ–∂: ${fileName}`);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Obsidian –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ...\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    try {
      await fs.access(OBSIDIAN_DIR);
    } catch {
      console.log(`üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ${OBSIDIAN_DIR}`);
      await fs.mkdir(OBSIDIAN_DIR, { recursive: true });
    }
    
    await createUserFiles();
    console.log('');
    await createMoreBookings();
    console.log('');
    await createMorePayments();
    
    console.log('\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Obsidian –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    console.log('\nüìä –°–æ–∑–¥–∞–Ω–æ:');
    console.log('- 5 —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π');
    console.log('- 5 —Ñ–∞–π–ª–æ–≤ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π');
    console.log('- 4 —Ñ–∞–π–ª–∞ –ø–ª–∞—Ç–µ–∂–µ–π');
    console.log('- 2 —Ñ–∞–π–ª–∞ –∫–æ—Ä—Ç–æ–≤');
    console.log('\n‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å —Ä–µ–∞–ª—å–Ω—ã–µ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  }
}

main();
